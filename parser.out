Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> stmntwrap
Rule 2     program -> block
Rule 3     program -> while
Rule 4     program -> for
Rule 5     program -> <empty>
Rule 6     stmntwrap -> statement COLON
Rule 7     statement -> INT ID is_assing
Rule 8     statement -> FLOAT ID is_assing
Rule 9     statement -> STRING ID is_assing
Rule 10    statement -> BOOLEAN ID is_assing
Rule 11    block -> ifblock
Rule 12    ifblock -> IF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont
Rule 13    ifcont -> elifblock ifcont
Rule 14    ifcont -> elseblock
Rule 15    ifcont -> <empty>
Rule 16    elseblock -> ELSE LCURLY program RCURLY
Rule 17    elifblock -> ELIF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont
Rule 18    while -> WHILE LPTHESES condition RPTHESES LCURLY program RCURLY
Rule 19    for -> FOR LPTHESES stmntwrap condition COLON expression RPTHESES LCURLY program RCURLY
Rule 20    condition -> BOOLVAL appendcond
Rule 21    condition -> comparison appendcond
Rule 22    appendcond -> AND condition
Rule 23    appendcond -> OR condition
Rule 24    appendcond -> <empty>
Rule 25    comparison -> expression EQUAL expression
Rule 26    comparison -> expression NOTEQUAL expression
Rule 27    comparison -> expression GTHAN expression
Rule 28    comparison -> expression LTHAN expression
Rule 29    comparison -> expression GEQTHAN expression
Rule 30    comparison -> expression LEQTHAN expression
Rule 31    is_assing -> ASSIGN expression
Rule 32    is_assing -> <empty>
Rule 33    statement -> PRINT LPTHESES expression RPTHESES
Rule 34    statement -> ID ASSIGN expression
Rule 35    expression -> expression PLUS expression
Rule 36    expression -> expression MINUS expression
Rule 37    expression -> expression MULT expression
Rule 38    expression -> expression DIVIDE expression
Rule 39    expression -> expression EXP expression
Rule 40    expression -> MINUS expression
Rule 41    expression -> LPTHESES expression RPTHESES
Rule 42    expression -> INUM
Rule 43    expression -> FNUM
Rule 44    expression -> BOOLVAL
Rule 45    expression -> STRVAL
Rule 46    expression -> ID

Terminals, with rules where they appear

AND                  : 22
ASSIGN               : 31 34
BOOLEAN              : 10
BOOLVAL              : 20 44
COLON                : 6 19
DIVIDE               : 38
ELIF                 : 17
ELSE                 : 16
EQUAL                : 25
EXP                  : 39
FLOAT                : 8
FNUM                 : 43
FOR                  : 19
GEQTHAN              : 29
GTHAN                : 27
ID                   : 7 8 9 10 34 46
IF                   : 12
INT                  : 7
INUM                 : 42
LCURLY               : 12 16 17 18 19
LEQTHAN              : 30
LPTHESES             : 12 17 18 19 33 41
LTHAN                : 28
MINUS                : 36 40
MULT                 : 37
NOTEQUAL             : 26
OR                   : 23
PLUS                 : 35
PRINT                : 33
RCURLY               : 12 16 17 18 19
RPTHESES             : 12 17 18 19 33 41
STRING               : 9
STRVAL               : 45
WHILE                : 18
error                : 

Nonterminals, with rules where they appear

appendcond           : 20 21
block                : 2
comparison           : 21
condition            : 12 17 18 19 22 23
elifblock            : 13
elseblock            : 14
expression           : 19 25 25 26 26 27 27 28 28 29 29 30 30 31 33 34 35 35 36 36 37 37 38 38 39 39 40 41
for                  : 4
ifblock              : 11
ifcont               : 12 13 17
is_assing            : 7 8 9 10
program              : 12 16 17 18 19 0
statement            : 6
stmntwrap            : 1 19
while                : 3

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . stmntwrap
    (2) program -> . block
    (3) program -> . while
    (4) program -> . for
    (5) program -> .
    (6) stmntwrap -> . statement COLON
    (11) block -> . ifblock
    (18) while -> . WHILE LPTHESES condition RPTHESES LCURLY program RCURLY
    (19) for -> . FOR LPTHESES stmntwrap condition COLON expression RPTHESES LCURLY program RCURLY
    (7) statement -> . INT ID is_assing
    (8) statement -> . FLOAT ID is_assing
    (9) statement -> . STRING ID is_assing
    (10) statement -> . BOOLEAN ID is_assing
    (33) statement -> . PRINT LPTHESES expression RPTHESES
    (34) statement -> . ID ASSIGN expression
    (12) ifblock -> . IF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont

    $end            reduce using rule 5 (program -> .)
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    INT             shift and go to state 10
    FLOAT           shift and go to state 12
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 14
    PRINT           shift and go to state 15
    ID              shift and go to state 11
    IF              shift and go to state 16

    program                        shift and go to state 1
    stmntwrap                      shift and go to state 2
    block                          shift and go to state 3
    while                          shift and go to state 4
    for                            shift and go to state 5
    statement                      shift and go to state 6
    ifblock                        shift and go to state 7

state 1

    (0) S' -> program .



state 2

    (1) program -> stmntwrap .

    $end            reduce using rule 1 (program -> stmntwrap .)
    RCURLY          reduce using rule 1 (program -> stmntwrap .)


state 3

    (2) program -> block .

    $end            reduce using rule 2 (program -> block .)
    RCURLY          reduce using rule 2 (program -> block .)


state 4

    (3) program -> while .

    $end            reduce using rule 3 (program -> while .)
    RCURLY          reduce using rule 3 (program -> while .)


state 5

    (4) program -> for .

    $end            reduce using rule 4 (program -> for .)
    RCURLY          reduce using rule 4 (program -> for .)


state 6

    (6) stmntwrap -> statement . COLON

    COLON           shift and go to state 17


state 7

    (11) block -> ifblock .

    $end            reduce using rule 11 (block -> ifblock .)
    RCURLY          reduce using rule 11 (block -> ifblock .)


state 8

    (18) while -> WHILE . LPTHESES condition RPTHESES LCURLY program RCURLY

    LPTHESES        shift and go to state 18


state 9

    (19) for -> FOR . LPTHESES stmntwrap condition COLON expression RPTHESES LCURLY program RCURLY

    LPTHESES        shift and go to state 19


state 10

    (7) statement -> INT . ID is_assing

    ID              shift and go to state 20


state 11

    (34) statement -> ID . ASSIGN expression

    ASSIGN          shift and go to state 21


state 12

    (8) statement -> FLOAT . ID is_assing

    ID              shift and go to state 22


state 13

    (9) statement -> STRING . ID is_assing

    ID              shift and go to state 23


state 14

    (10) statement -> BOOLEAN . ID is_assing

    ID              shift and go to state 24


state 15

    (33) statement -> PRINT . LPTHESES expression RPTHESES

    LPTHESES        shift and go to state 25


state 16

    (12) ifblock -> IF . LPTHESES condition RPTHESES LCURLY program RCURLY ifcont

    LPTHESES        shift and go to state 26


state 17

    (6) stmntwrap -> statement COLON .

    $end            reduce using rule 6 (stmntwrap -> statement COLON .)
    BOOLVAL         reduce using rule 6 (stmntwrap -> statement COLON .)
    MINUS           reduce using rule 6 (stmntwrap -> statement COLON .)
    LPTHESES        reduce using rule 6 (stmntwrap -> statement COLON .)
    INUM            reduce using rule 6 (stmntwrap -> statement COLON .)
    FNUM            reduce using rule 6 (stmntwrap -> statement COLON .)
    STRVAL          reduce using rule 6 (stmntwrap -> statement COLON .)
    ID              reduce using rule 6 (stmntwrap -> statement COLON .)
    RCURLY          reduce using rule 6 (stmntwrap -> statement COLON .)


state 18

    (18) while -> WHILE LPTHESES . condition RPTHESES LCURLY program RCURLY
    (20) condition -> . BOOLVAL appendcond
    (21) condition -> . comparison appendcond
    (25) comparison -> . expression EQUAL expression
    (26) comparison -> . expression NOTEQUAL expression
    (27) comparison -> . expression GTHAN expression
    (28) comparison -> . expression LTHAN expression
    (29) comparison -> . expression GEQTHAN expression
    (30) comparison -> . expression LEQTHAN expression
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression MULT expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression EXP expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPTHESES expression RPTHESES
    (42) expression -> . INUM
    (43) expression -> . FNUM
    (44) expression -> . BOOLVAL
    (45) expression -> . STRVAL
    (46) expression -> . ID

    BOOLVAL         shift and go to state 29
    MINUS           shift and go to state 32
    LPTHESES        shift and go to state 27
    INUM            shift and go to state 33
    FNUM            shift and go to state 34
    STRVAL          shift and go to state 35
    ID              shift and go to state 36

    condition                      shift and go to state 28
    comparison                     shift and go to state 30
    expression                     shift and go to state 31

state 19

    (19) for -> FOR LPTHESES . stmntwrap condition COLON expression RPTHESES LCURLY program RCURLY
    (6) stmntwrap -> . statement COLON
    (7) statement -> . INT ID is_assing
    (8) statement -> . FLOAT ID is_assing
    (9) statement -> . STRING ID is_assing
    (10) statement -> . BOOLEAN ID is_assing
    (33) statement -> . PRINT LPTHESES expression RPTHESES
    (34) statement -> . ID ASSIGN expression

    INT             shift and go to state 10
    FLOAT           shift and go to state 12
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 14
    PRINT           shift and go to state 15
    ID              shift and go to state 11

    stmntwrap                      shift and go to state 37
    statement                      shift and go to state 6

state 20

    (7) statement -> INT ID . is_assing
    (31) is_assing -> . ASSIGN expression
    (32) is_assing -> .

    ASSIGN          shift and go to state 39
    COLON           reduce using rule 32 (is_assing -> .)

    is_assing                      shift and go to state 38

state 21

    (34) statement -> ID ASSIGN . expression
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression MULT expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression EXP expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPTHESES expression RPTHESES
    (42) expression -> . INUM
    (43) expression -> . FNUM
    (44) expression -> . BOOLVAL
    (45) expression -> . STRVAL
    (46) expression -> . ID

    MINUS           shift and go to state 32
    LPTHESES        shift and go to state 27
    INUM            shift and go to state 33
    FNUM            shift and go to state 34
    BOOLVAL         shift and go to state 41
    STRVAL          shift and go to state 35
    ID              shift and go to state 36

    expression                     shift and go to state 40

state 22

    (8) statement -> FLOAT ID . is_assing
    (31) is_assing -> . ASSIGN expression
    (32) is_assing -> .

    ASSIGN          shift and go to state 39
    COLON           reduce using rule 32 (is_assing -> .)

    is_assing                      shift and go to state 42

state 23

    (9) statement -> STRING ID . is_assing
    (31) is_assing -> . ASSIGN expression
    (32) is_assing -> .

    ASSIGN          shift and go to state 39
    COLON           reduce using rule 32 (is_assing -> .)

    is_assing                      shift and go to state 43

state 24

    (10) statement -> BOOLEAN ID . is_assing
    (31) is_assing -> . ASSIGN expression
    (32) is_assing -> .

    ASSIGN          shift and go to state 39
    COLON           reduce using rule 32 (is_assing -> .)

    is_assing                      shift and go to state 44

state 25

    (33) statement -> PRINT LPTHESES . expression RPTHESES
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression MULT expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression EXP expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPTHESES expression RPTHESES
    (42) expression -> . INUM
    (43) expression -> . FNUM
    (44) expression -> . BOOLVAL
    (45) expression -> . STRVAL
    (46) expression -> . ID

    MINUS           shift and go to state 32
    LPTHESES        shift and go to state 27
    INUM            shift and go to state 33
    FNUM            shift and go to state 34
    BOOLVAL         shift and go to state 41
    STRVAL          shift and go to state 35
    ID              shift and go to state 36

    expression                     shift and go to state 45

state 26

    (12) ifblock -> IF LPTHESES . condition RPTHESES LCURLY program RCURLY ifcont
    (20) condition -> . BOOLVAL appendcond
    (21) condition -> . comparison appendcond
    (25) comparison -> . expression EQUAL expression
    (26) comparison -> . expression NOTEQUAL expression
    (27) comparison -> . expression GTHAN expression
    (28) comparison -> . expression LTHAN expression
    (29) comparison -> . expression GEQTHAN expression
    (30) comparison -> . expression LEQTHAN expression
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression MULT expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression EXP expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPTHESES expression RPTHESES
    (42) expression -> . INUM
    (43) expression -> . FNUM
    (44) expression -> . BOOLVAL
    (45) expression -> . STRVAL
    (46) expression -> . ID

    BOOLVAL         shift and go to state 29
    MINUS           shift and go to state 32
    LPTHESES        shift and go to state 27
    INUM            shift and go to state 33
    FNUM            shift and go to state 34
    STRVAL          shift and go to state 35
    ID              shift and go to state 36

    condition                      shift and go to state 46
    comparison                     shift and go to state 30
    expression                     shift and go to state 31

state 27

    (41) expression -> LPTHESES . expression RPTHESES
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression MULT expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression EXP expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPTHESES expression RPTHESES
    (42) expression -> . INUM
    (43) expression -> . FNUM
    (44) expression -> . BOOLVAL
    (45) expression -> . STRVAL
    (46) expression -> . ID

    MINUS           shift and go to state 32
    LPTHESES        shift and go to state 27
    INUM            shift and go to state 33
    FNUM            shift and go to state 34
    BOOLVAL         shift and go to state 41
    STRVAL          shift and go to state 35
    ID              shift and go to state 36

    expression                     shift and go to state 47

state 28

    (18) while -> WHILE LPTHESES condition . RPTHESES LCURLY program RCURLY

    RPTHESES        shift and go to state 48


state 29

    (20) condition -> BOOLVAL . appendcond
    (44) expression -> BOOLVAL .
    (22) appendcond -> . AND condition
    (23) appendcond -> . OR condition
    (24) appendcond -> .

    EQUAL           reduce using rule 44 (expression -> BOOLVAL .)
    NOTEQUAL        reduce using rule 44 (expression -> BOOLVAL .)
    GTHAN           reduce using rule 44 (expression -> BOOLVAL .)
    LTHAN           reduce using rule 44 (expression -> BOOLVAL .)
    GEQTHAN         reduce using rule 44 (expression -> BOOLVAL .)
    LEQTHAN         reduce using rule 44 (expression -> BOOLVAL .)
    PLUS            reduce using rule 44 (expression -> BOOLVAL .)
    MINUS           reduce using rule 44 (expression -> BOOLVAL .)
    MULT            reduce using rule 44 (expression -> BOOLVAL .)
    DIVIDE          reduce using rule 44 (expression -> BOOLVAL .)
    EXP             reduce using rule 44 (expression -> BOOLVAL .)
    AND             shift and go to state 50
    OR              shift and go to state 51
    RPTHESES        reduce using rule 24 (appendcond -> .)
    COLON           reduce using rule 24 (appendcond -> .)

    appendcond                     shift and go to state 49

state 30

    (21) condition -> comparison . appendcond
    (22) appendcond -> . AND condition
    (23) appendcond -> . OR condition
    (24) appendcond -> .

    AND             shift and go to state 50
    OR              shift and go to state 51
    RPTHESES        reduce using rule 24 (appendcond -> .)
    COLON           reduce using rule 24 (appendcond -> .)

    appendcond                     shift and go to state 52

state 31

    (25) comparison -> expression . EQUAL expression
    (26) comparison -> expression . NOTEQUAL expression
    (27) comparison -> expression . GTHAN expression
    (28) comparison -> expression . LTHAN expression
    (29) comparison -> expression . GEQTHAN expression
    (30) comparison -> expression . LEQTHAN expression
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . MULT expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . EXP expression

    EQUAL           shift and go to state 53
    NOTEQUAL        shift and go to state 54
    GTHAN           shift and go to state 55
    LTHAN           shift and go to state 56
    GEQTHAN         shift and go to state 57
    LEQTHAN         shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    MULT            shift and go to state 61
    DIVIDE          shift and go to state 62
    EXP             shift and go to state 63


state 32

    (40) expression -> MINUS . expression
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression MULT expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression EXP expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPTHESES expression RPTHESES
    (42) expression -> . INUM
    (43) expression -> . FNUM
    (44) expression -> . BOOLVAL
    (45) expression -> . STRVAL
    (46) expression -> . ID

    MINUS           shift and go to state 32
    LPTHESES        shift and go to state 27
    INUM            shift and go to state 33
    FNUM            shift and go to state 34
    BOOLVAL         shift and go to state 41
    STRVAL          shift and go to state 35
    ID              shift and go to state 36

    expression                     shift and go to state 64

state 33

    (42) expression -> INUM .

    EQUAL           reduce using rule 42 (expression -> INUM .)
    NOTEQUAL        reduce using rule 42 (expression -> INUM .)
    GTHAN           reduce using rule 42 (expression -> INUM .)
    LTHAN           reduce using rule 42 (expression -> INUM .)
    GEQTHAN         reduce using rule 42 (expression -> INUM .)
    LEQTHAN         reduce using rule 42 (expression -> INUM .)
    PLUS            reduce using rule 42 (expression -> INUM .)
    MINUS           reduce using rule 42 (expression -> INUM .)
    MULT            reduce using rule 42 (expression -> INUM .)
    DIVIDE          reduce using rule 42 (expression -> INUM .)
    EXP             reduce using rule 42 (expression -> INUM .)
    COLON           reduce using rule 42 (expression -> INUM .)
    RPTHESES        reduce using rule 42 (expression -> INUM .)
    AND             reduce using rule 42 (expression -> INUM .)
    OR              reduce using rule 42 (expression -> INUM .)


state 34

    (43) expression -> FNUM .

    EQUAL           reduce using rule 43 (expression -> FNUM .)
    NOTEQUAL        reduce using rule 43 (expression -> FNUM .)
    GTHAN           reduce using rule 43 (expression -> FNUM .)
    LTHAN           reduce using rule 43 (expression -> FNUM .)
    GEQTHAN         reduce using rule 43 (expression -> FNUM .)
    LEQTHAN         reduce using rule 43 (expression -> FNUM .)
    PLUS            reduce using rule 43 (expression -> FNUM .)
    MINUS           reduce using rule 43 (expression -> FNUM .)
    MULT            reduce using rule 43 (expression -> FNUM .)
    DIVIDE          reduce using rule 43 (expression -> FNUM .)
    EXP             reduce using rule 43 (expression -> FNUM .)
    COLON           reduce using rule 43 (expression -> FNUM .)
    RPTHESES        reduce using rule 43 (expression -> FNUM .)
    AND             reduce using rule 43 (expression -> FNUM .)
    OR              reduce using rule 43 (expression -> FNUM .)


state 35

    (45) expression -> STRVAL .

    EQUAL           reduce using rule 45 (expression -> STRVAL .)
    NOTEQUAL        reduce using rule 45 (expression -> STRVAL .)
    GTHAN           reduce using rule 45 (expression -> STRVAL .)
    LTHAN           reduce using rule 45 (expression -> STRVAL .)
    GEQTHAN         reduce using rule 45 (expression -> STRVAL .)
    LEQTHAN         reduce using rule 45 (expression -> STRVAL .)
    PLUS            reduce using rule 45 (expression -> STRVAL .)
    MINUS           reduce using rule 45 (expression -> STRVAL .)
    MULT            reduce using rule 45 (expression -> STRVAL .)
    DIVIDE          reduce using rule 45 (expression -> STRVAL .)
    EXP             reduce using rule 45 (expression -> STRVAL .)
    COLON           reduce using rule 45 (expression -> STRVAL .)
    RPTHESES        reduce using rule 45 (expression -> STRVAL .)
    AND             reduce using rule 45 (expression -> STRVAL .)
    OR              reduce using rule 45 (expression -> STRVAL .)


state 36

    (46) expression -> ID .

    EQUAL           reduce using rule 46 (expression -> ID .)
    NOTEQUAL        reduce using rule 46 (expression -> ID .)
    GTHAN           reduce using rule 46 (expression -> ID .)
    LTHAN           reduce using rule 46 (expression -> ID .)
    GEQTHAN         reduce using rule 46 (expression -> ID .)
    LEQTHAN         reduce using rule 46 (expression -> ID .)
    PLUS            reduce using rule 46 (expression -> ID .)
    MINUS           reduce using rule 46 (expression -> ID .)
    MULT            reduce using rule 46 (expression -> ID .)
    DIVIDE          reduce using rule 46 (expression -> ID .)
    EXP             reduce using rule 46 (expression -> ID .)
    COLON           reduce using rule 46 (expression -> ID .)
    RPTHESES        reduce using rule 46 (expression -> ID .)
    AND             reduce using rule 46 (expression -> ID .)
    OR              reduce using rule 46 (expression -> ID .)


state 37

    (19) for -> FOR LPTHESES stmntwrap . condition COLON expression RPTHESES LCURLY program RCURLY
    (20) condition -> . BOOLVAL appendcond
    (21) condition -> . comparison appendcond
    (25) comparison -> . expression EQUAL expression
    (26) comparison -> . expression NOTEQUAL expression
    (27) comparison -> . expression GTHAN expression
    (28) comparison -> . expression LTHAN expression
    (29) comparison -> . expression GEQTHAN expression
    (30) comparison -> . expression LEQTHAN expression
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression MULT expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression EXP expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPTHESES expression RPTHESES
    (42) expression -> . INUM
    (43) expression -> . FNUM
    (44) expression -> . BOOLVAL
    (45) expression -> . STRVAL
    (46) expression -> . ID

    BOOLVAL         shift and go to state 29
    MINUS           shift and go to state 32
    LPTHESES        shift and go to state 27
    INUM            shift and go to state 33
    FNUM            shift and go to state 34
    STRVAL          shift and go to state 35
    ID              shift and go to state 36

    condition                      shift and go to state 65
    expression                     shift and go to state 31
    comparison                     shift and go to state 30

state 38

    (7) statement -> INT ID is_assing .

    COLON           reduce using rule 7 (statement -> INT ID is_assing .)


state 39

    (31) is_assing -> ASSIGN . expression
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression MULT expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression EXP expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPTHESES expression RPTHESES
    (42) expression -> . INUM
    (43) expression -> . FNUM
    (44) expression -> . BOOLVAL
    (45) expression -> . STRVAL
    (46) expression -> . ID

    MINUS           shift and go to state 32
    LPTHESES        shift and go to state 27
    INUM            shift and go to state 33
    FNUM            shift and go to state 34
    BOOLVAL         shift and go to state 41
    STRVAL          shift and go to state 35
    ID              shift and go to state 36

    expression                     shift and go to state 66

state 40

    (34) statement -> ID ASSIGN expression .
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . MULT expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . EXP expression

    COLON           reduce using rule 34 (statement -> ID ASSIGN expression .)
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    MULT            shift and go to state 61
    DIVIDE          shift and go to state 62
    EXP             shift and go to state 63


state 41

    (44) expression -> BOOLVAL .

    PLUS            reduce using rule 44 (expression -> BOOLVAL .)
    MINUS           reduce using rule 44 (expression -> BOOLVAL .)
    MULT            reduce using rule 44 (expression -> BOOLVAL .)
    DIVIDE          reduce using rule 44 (expression -> BOOLVAL .)
    EXP             reduce using rule 44 (expression -> BOOLVAL .)
    COLON           reduce using rule 44 (expression -> BOOLVAL .)
    RPTHESES        reduce using rule 44 (expression -> BOOLVAL .)
    EQUAL           reduce using rule 44 (expression -> BOOLVAL .)
    NOTEQUAL        reduce using rule 44 (expression -> BOOLVAL .)
    GTHAN           reduce using rule 44 (expression -> BOOLVAL .)
    LTHAN           reduce using rule 44 (expression -> BOOLVAL .)
    GEQTHAN         reduce using rule 44 (expression -> BOOLVAL .)
    LEQTHAN         reduce using rule 44 (expression -> BOOLVAL .)
    AND             reduce using rule 44 (expression -> BOOLVAL .)
    OR              reduce using rule 44 (expression -> BOOLVAL .)


state 42

    (8) statement -> FLOAT ID is_assing .

    COLON           reduce using rule 8 (statement -> FLOAT ID is_assing .)


state 43

    (9) statement -> STRING ID is_assing .

    COLON           reduce using rule 9 (statement -> STRING ID is_assing .)


state 44

    (10) statement -> BOOLEAN ID is_assing .

    COLON           reduce using rule 10 (statement -> BOOLEAN ID is_assing .)


state 45

    (33) statement -> PRINT LPTHESES expression . RPTHESES
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . MULT expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . EXP expression

    RPTHESES        shift and go to state 67
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    MULT            shift and go to state 61
    DIVIDE          shift and go to state 62
    EXP             shift and go to state 63


state 46

    (12) ifblock -> IF LPTHESES condition . RPTHESES LCURLY program RCURLY ifcont

    RPTHESES        shift and go to state 68


state 47

    (41) expression -> LPTHESES expression . RPTHESES
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . MULT expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . EXP expression

    RPTHESES        shift and go to state 69
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    MULT            shift and go to state 61
    DIVIDE          shift and go to state 62
    EXP             shift and go to state 63


state 48

    (18) while -> WHILE LPTHESES condition RPTHESES . LCURLY program RCURLY

    LCURLY          shift and go to state 70


state 49

    (20) condition -> BOOLVAL appendcond .

    RPTHESES        reduce using rule 20 (condition -> BOOLVAL appendcond .)
    COLON           reduce using rule 20 (condition -> BOOLVAL appendcond .)


state 50

    (22) appendcond -> AND . condition
    (20) condition -> . BOOLVAL appendcond
    (21) condition -> . comparison appendcond
    (25) comparison -> . expression EQUAL expression
    (26) comparison -> . expression NOTEQUAL expression
    (27) comparison -> . expression GTHAN expression
    (28) comparison -> . expression LTHAN expression
    (29) comparison -> . expression GEQTHAN expression
    (30) comparison -> . expression LEQTHAN expression
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression MULT expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression EXP expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPTHESES expression RPTHESES
    (42) expression -> . INUM
    (43) expression -> . FNUM
    (44) expression -> . BOOLVAL
    (45) expression -> . STRVAL
    (46) expression -> . ID

    BOOLVAL         shift and go to state 29
    MINUS           shift and go to state 32
    LPTHESES        shift and go to state 27
    INUM            shift and go to state 33
    FNUM            shift and go to state 34
    STRVAL          shift and go to state 35
    ID              shift and go to state 36

    condition                      shift and go to state 71
    comparison                     shift and go to state 30
    expression                     shift and go to state 31

state 51

    (23) appendcond -> OR . condition
    (20) condition -> . BOOLVAL appendcond
    (21) condition -> . comparison appendcond
    (25) comparison -> . expression EQUAL expression
    (26) comparison -> . expression NOTEQUAL expression
    (27) comparison -> . expression GTHAN expression
    (28) comparison -> . expression LTHAN expression
    (29) comparison -> . expression GEQTHAN expression
    (30) comparison -> . expression LEQTHAN expression
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression MULT expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression EXP expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPTHESES expression RPTHESES
    (42) expression -> . INUM
    (43) expression -> . FNUM
    (44) expression -> . BOOLVAL
    (45) expression -> . STRVAL
    (46) expression -> . ID

    BOOLVAL         shift and go to state 29
    MINUS           shift and go to state 32
    LPTHESES        shift and go to state 27
    INUM            shift and go to state 33
    FNUM            shift and go to state 34
    STRVAL          shift and go to state 35
    ID              shift and go to state 36

    condition                      shift and go to state 72
    comparison                     shift and go to state 30
    expression                     shift and go to state 31

state 52

    (21) condition -> comparison appendcond .

    RPTHESES        reduce using rule 21 (condition -> comparison appendcond .)
    COLON           reduce using rule 21 (condition -> comparison appendcond .)


state 53

    (25) comparison -> expression EQUAL . expression
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression MULT expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression EXP expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPTHESES expression RPTHESES
    (42) expression -> . INUM
    (43) expression -> . FNUM
    (44) expression -> . BOOLVAL
    (45) expression -> . STRVAL
    (46) expression -> . ID

    MINUS           shift and go to state 32
    LPTHESES        shift and go to state 27
    INUM            shift and go to state 33
    FNUM            shift and go to state 34
    BOOLVAL         shift and go to state 41
    STRVAL          shift and go to state 35
    ID              shift and go to state 36

    expression                     shift and go to state 73

state 54

    (26) comparison -> expression NOTEQUAL . expression
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression MULT expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression EXP expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPTHESES expression RPTHESES
    (42) expression -> . INUM
    (43) expression -> . FNUM
    (44) expression -> . BOOLVAL
    (45) expression -> . STRVAL
    (46) expression -> . ID

    MINUS           shift and go to state 32
    LPTHESES        shift and go to state 27
    INUM            shift and go to state 33
    FNUM            shift and go to state 34
    BOOLVAL         shift and go to state 41
    STRVAL          shift and go to state 35
    ID              shift and go to state 36

    expression                     shift and go to state 74

state 55

    (27) comparison -> expression GTHAN . expression
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression MULT expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression EXP expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPTHESES expression RPTHESES
    (42) expression -> . INUM
    (43) expression -> . FNUM
    (44) expression -> . BOOLVAL
    (45) expression -> . STRVAL
    (46) expression -> . ID

    MINUS           shift and go to state 32
    LPTHESES        shift and go to state 27
    INUM            shift and go to state 33
    FNUM            shift and go to state 34
    BOOLVAL         shift and go to state 41
    STRVAL          shift and go to state 35
    ID              shift and go to state 36

    expression                     shift and go to state 75

state 56

    (28) comparison -> expression LTHAN . expression
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression MULT expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression EXP expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPTHESES expression RPTHESES
    (42) expression -> . INUM
    (43) expression -> . FNUM
    (44) expression -> . BOOLVAL
    (45) expression -> . STRVAL
    (46) expression -> . ID

    MINUS           shift and go to state 32
    LPTHESES        shift and go to state 27
    INUM            shift and go to state 33
    FNUM            shift and go to state 34
    BOOLVAL         shift and go to state 41
    STRVAL          shift and go to state 35
    ID              shift and go to state 36

    expression                     shift and go to state 76

state 57

    (29) comparison -> expression GEQTHAN . expression
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression MULT expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression EXP expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPTHESES expression RPTHESES
    (42) expression -> . INUM
    (43) expression -> . FNUM
    (44) expression -> . BOOLVAL
    (45) expression -> . STRVAL
    (46) expression -> . ID

    MINUS           shift and go to state 32
    LPTHESES        shift and go to state 27
    INUM            shift and go to state 33
    FNUM            shift and go to state 34
    BOOLVAL         shift and go to state 41
    STRVAL          shift and go to state 35
    ID              shift and go to state 36

    expression                     shift and go to state 77

state 58

    (30) comparison -> expression LEQTHAN . expression
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression MULT expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression EXP expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPTHESES expression RPTHESES
    (42) expression -> . INUM
    (43) expression -> . FNUM
    (44) expression -> . BOOLVAL
    (45) expression -> . STRVAL
    (46) expression -> . ID

    MINUS           shift and go to state 32
    LPTHESES        shift and go to state 27
    INUM            shift and go to state 33
    FNUM            shift and go to state 34
    BOOLVAL         shift and go to state 41
    STRVAL          shift and go to state 35
    ID              shift and go to state 36

    expression                     shift and go to state 78

state 59

    (35) expression -> expression PLUS . expression
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression MULT expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression EXP expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPTHESES expression RPTHESES
    (42) expression -> . INUM
    (43) expression -> . FNUM
    (44) expression -> . BOOLVAL
    (45) expression -> . STRVAL
    (46) expression -> . ID

    MINUS           shift and go to state 32
    LPTHESES        shift and go to state 27
    INUM            shift and go to state 33
    FNUM            shift and go to state 34
    BOOLVAL         shift and go to state 41
    STRVAL          shift and go to state 35
    ID              shift and go to state 36

    expression                     shift and go to state 79

state 60

    (36) expression -> expression MINUS . expression
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression MULT expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression EXP expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPTHESES expression RPTHESES
    (42) expression -> . INUM
    (43) expression -> . FNUM
    (44) expression -> . BOOLVAL
    (45) expression -> . STRVAL
    (46) expression -> . ID

    MINUS           shift and go to state 32
    LPTHESES        shift and go to state 27
    INUM            shift and go to state 33
    FNUM            shift and go to state 34
    BOOLVAL         shift and go to state 41
    STRVAL          shift and go to state 35
    ID              shift and go to state 36

    expression                     shift and go to state 80

state 61

    (37) expression -> expression MULT . expression
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression MULT expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression EXP expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPTHESES expression RPTHESES
    (42) expression -> . INUM
    (43) expression -> . FNUM
    (44) expression -> . BOOLVAL
    (45) expression -> . STRVAL
    (46) expression -> . ID

    MINUS           shift and go to state 32
    LPTHESES        shift and go to state 27
    INUM            shift and go to state 33
    FNUM            shift and go to state 34
    BOOLVAL         shift and go to state 41
    STRVAL          shift and go to state 35
    ID              shift and go to state 36

    expression                     shift and go to state 81

state 62

    (38) expression -> expression DIVIDE . expression
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression MULT expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression EXP expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPTHESES expression RPTHESES
    (42) expression -> . INUM
    (43) expression -> . FNUM
    (44) expression -> . BOOLVAL
    (45) expression -> . STRVAL
    (46) expression -> . ID

    MINUS           shift and go to state 32
    LPTHESES        shift and go to state 27
    INUM            shift and go to state 33
    FNUM            shift and go to state 34
    BOOLVAL         shift and go to state 41
    STRVAL          shift and go to state 35
    ID              shift and go to state 36

    expression                     shift and go to state 82

state 63

    (39) expression -> expression EXP . expression
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression MULT expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression EXP expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPTHESES expression RPTHESES
    (42) expression -> . INUM
    (43) expression -> . FNUM
    (44) expression -> . BOOLVAL
    (45) expression -> . STRVAL
    (46) expression -> . ID

    MINUS           shift and go to state 32
    LPTHESES        shift and go to state 27
    INUM            shift and go to state 33
    FNUM            shift and go to state 34
    BOOLVAL         shift and go to state 41
    STRVAL          shift and go to state 35
    ID              shift and go to state 36

    expression                     shift and go to state 83

state 64

    (40) expression -> MINUS expression .
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . MULT expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . EXP expression

    EQUAL           reduce using rule 40 (expression -> MINUS expression .)
    NOTEQUAL        reduce using rule 40 (expression -> MINUS expression .)
    GTHAN           reduce using rule 40 (expression -> MINUS expression .)
    LTHAN           reduce using rule 40 (expression -> MINUS expression .)
    GEQTHAN         reduce using rule 40 (expression -> MINUS expression .)
    LEQTHAN         reduce using rule 40 (expression -> MINUS expression .)
    PLUS            reduce using rule 40 (expression -> MINUS expression .)
    MINUS           reduce using rule 40 (expression -> MINUS expression .)
    MULT            reduce using rule 40 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 40 (expression -> MINUS expression .)
    EXP             reduce using rule 40 (expression -> MINUS expression .)
    COLON           reduce using rule 40 (expression -> MINUS expression .)
    RPTHESES        reduce using rule 40 (expression -> MINUS expression .)
    AND             reduce using rule 40 (expression -> MINUS expression .)
    OR              reduce using rule 40 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 59 ]
  ! MINUS           [ shift and go to state 60 ]
  ! MULT            [ shift and go to state 61 ]
  ! DIVIDE          [ shift and go to state 62 ]
  ! EXP             [ shift and go to state 63 ]


state 65

    (19) for -> FOR LPTHESES stmntwrap condition . COLON expression RPTHESES LCURLY program RCURLY

    COLON           shift and go to state 84


state 66

    (31) is_assing -> ASSIGN expression .
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . MULT expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . EXP expression

    COLON           reduce using rule 31 (is_assing -> ASSIGN expression .)
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    MULT            shift and go to state 61
    DIVIDE          shift and go to state 62
    EXP             shift and go to state 63


state 67

    (33) statement -> PRINT LPTHESES expression RPTHESES .

    COLON           reduce using rule 33 (statement -> PRINT LPTHESES expression RPTHESES .)


state 68

    (12) ifblock -> IF LPTHESES condition RPTHESES . LCURLY program RCURLY ifcont

    LCURLY          shift and go to state 85


state 69

    (41) expression -> LPTHESES expression RPTHESES .

    EQUAL           reduce using rule 41 (expression -> LPTHESES expression RPTHESES .)
    NOTEQUAL        reduce using rule 41 (expression -> LPTHESES expression RPTHESES .)
    GTHAN           reduce using rule 41 (expression -> LPTHESES expression RPTHESES .)
    LTHAN           reduce using rule 41 (expression -> LPTHESES expression RPTHESES .)
    GEQTHAN         reduce using rule 41 (expression -> LPTHESES expression RPTHESES .)
    LEQTHAN         reduce using rule 41 (expression -> LPTHESES expression RPTHESES .)
    PLUS            reduce using rule 41 (expression -> LPTHESES expression RPTHESES .)
    MINUS           reduce using rule 41 (expression -> LPTHESES expression RPTHESES .)
    MULT            reduce using rule 41 (expression -> LPTHESES expression RPTHESES .)
    DIVIDE          reduce using rule 41 (expression -> LPTHESES expression RPTHESES .)
    EXP             reduce using rule 41 (expression -> LPTHESES expression RPTHESES .)
    COLON           reduce using rule 41 (expression -> LPTHESES expression RPTHESES .)
    RPTHESES        reduce using rule 41 (expression -> LPTHESES expression RPTHESES .)
    AND             reduce using rule 41 (expression -> LPTHESES expression RPTHESES .)
    OR              reduce using rule 41 (expression -> LPTHESES expression RPTHESES .)


state 70

    (18) while -> WHILE LPTHESES condition RPTHESES LCURLY . program RCURLY
    (1) program -> . stmntwrap
    (2) program -> . block
    (3) program -> . while
    (4) program -> . for
    (5) program -> .
    (6) stmntwrap -> . statement COLON
    (11) block -> . ifblock
    (18) while -> . WHILE LPTHESES condition RPTHESES LCURLY program RCURLY
    (19) for -> . FOR LPTHESES stmntwrap condition COLON expression RPTHESES LCURLY program RCURLY
    (7) statement -> . INT ID is_assing
    (8) statement -> . FLOAT ID is_assing
    (9) statement -> . STRING ID is_assing
    (10) statement -> . BOOLEAN ID is_assing
    (33) statement -> . PRINT LPTHESES expression RPTHESES
    (34) statement -> . ID ASSIGN expression
    (12) ifblock -> . IF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont

    RCURLY          reduce using rule 5 (program -> .)
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    INT             shift and go to state 10
    FLOAT           shift and go to state 12
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 14
    PRINT           shift and go to state 15
    ID              shift and go to state 11
    IF              shift and go to state 16

    program                        shift and go to state 86
    stmntwrap                      shift and go to state 2
    block                          shift and go to state 3
    while                          shift and go to state 4
    for                            shift and go to state 5
    statement                      shift and go to state 6
    ifblock                        shift and go to state 7

state 71

    (22) appendcond -> AND condition .

    RPTHESES        reduce using rule 22 (appendcond -> AND condition .)
    COLON           reduce using rule 22 (appendcond -> AND condition .)


state 72

    (23) appendcond -> OR condition .

    RPTHESES        reduce using rule 23 (appendcond -> OR condition .)
    COLON           reduce using rule 23 (appendcond -> OR condition .)


state 73

    (25) comparison -> expression EQUAL expression .
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . MULT expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . EXP expression

    AND             reduce using rule 25 (comparison -> expression EQUAL expression .)
    OR              reduce using rule 25 (comparison -> expression EQUAL expression .)
    RPTHESES        reduce using rule 25 (comparison -> expression EQUAL expression .)
    COLON           reduce using rule 25 (comparison -> expression EQUAL expression .)
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    MULT            shift and go to state 61
    DIVIDE          shift and go to state 62
    EXP             shift and go to state 63


state 74

    (26) comparison -> expression NOTEQUAL expression .
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . MULT expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . EXP expression

    AND             reduce using rule 26 (comparison -> expression NOTEQUAL expression .)
    OR              reduce using rule 26 (comparison -> expression NOTEQUAL expression .)
    RPTHESES        reduce using rule 26 (comparison -> expression NOTEQUAL expression .)
    COLON           reduce using rule 26 (comparison -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    MULT            shift and go to state 61
    DIVIDE          shift and go to state 62
    EXP             shift and go to state 63


state 75

    (27) comparison -> expression GTHAN expression .
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . MULT expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . EXP expression

    AND             reduce using rule 27 (comparison -> expression GTHAN expression .)
    OR              reduce using rule 27 (comparison -> expression GTHAN expression .)
    RPTHESES        reduce using rule 27 (comparison -> expression GTHAN expression .)
    COLON           reduce using rule 27 (comparison -> expression GTHAN expression .)
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    MULT            shift and go to state 61
    DIVIDE          shift and go to state 62
    EXP             shift and go to state 63


state 76

    (28) comparison -> expression LTHAN expression .
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . MULT expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . EXP expression

    AND             reduce using rule 28 (comparison -> expression LTHAN expression .)
    OR              reduce using rule 28 (comparison -> expression LTHAN expression .)
    RPTHESES        reduce using rule 28 (comparison -> expression LTHAN expression .)
    COLON           reduce using rule 28 (comparison -> expression LTHAN expression .)
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    MULT            shift and go to state 61
    DIVIDE          shift and go to state 62
    EXP             shift and go to state 63


state 77

    (29) comparison -> expression GEQTHAN expression .
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . MULT expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . EXP expression

    AND             reduce using rule 29 (comparison -> expression GEQTHAN expression .)
    OR              reduce using rule 29 (comparison -> expression GEQTHAN expression .)
    RPTHESES        reduce using rule 29 (comparison -> expression GEQTHAN expression .)
    COLON           reduce using rule 29 (comparison -> expression GEQTHAN expression .)
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    MULT            shift and go to state 61
    DIVIDE          shift and go to state 62
    EXP             shift and go to state 63


state 78

    (30) comparison -> expression LEQTHAN expression .
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . MULT expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . EXP expression

    AND             reduce using rule 30 (comparison -> expression LEQTHAN expression .)
    OR              reduce using rule 30 (comparison -> expression LEQTHAN expression .)
    RPTHESES        reduce using rule 30 (comparison -> expression LEQTHAN expression .)
    COLON           reduce using rule 30 (comparison -> expression LEQTHAN expression .)
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    MULT            shift and go to state 61
    DIVIDE          shift and go to state 62
    EXP             shift and go to state 63


state 79

    (35) expression -> expression PLUS expression .
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . MULT expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . EXP expression

    EQUAL           reduce using rule 35 (expression -> expression PLUS expression .)
    NOTEQUAL        reduce using rule 35 (expression -> expression PLUS expression .)
    GTHAN           reduce using rule 35 (expression -> expression PLUS expression .)
    LTHAN           reduce using rule 35 (expression -> expression PLUS expression .)
    GEQTHAN         reduce using rule 35 (expression -> expression PLUS expression .)
    LEQTHAN         reduce using rule 35 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 35 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 35 (expression -> expression PLUS expression .)
    EXP             reduce using rule 35 (expression -> expression PLUS expression .)
    COLON           reduce using rule 35 (expression -> expression PLUS expression .)
    RPTHESES        reduce using rule 35 (expression -> expression PLUS expression .)
    AND             reduce using rule 35 (expression -> expression PLUS expression .)
    OR              reduce using rule 35 (expression -> expression PLUS expression .)
    MULT            shift and go to state 61
    DIVIDE          shift and go to state 62

  ! MULT            [ reduce using rule 35 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 59 ]
  ! MINUS           [ shift and go to state 60 ]
  ! EXP             [ shift and go to state 63 ]


state 80

    (36) expression -> expression MINUS expression .
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . MULT expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . EXP expression

    EQUAL           reduce using rule 36 (expression -> expression MINUS expression .)
    NOTEQUAL        reduce using rule 36 (expression -> expression MINUS expression .)
    GTHAN           reduce using rule 36 (expression -> expression MINUS expression .)
    LTHAN           reduce using rule 36 (expression -> expression MINUS expression .)
    GEQTHAN         reduce using rule 36 (expression -> expression MINUS expression .)
    LEQTHAN         reduce using rule 36 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 36 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 36 (expression -> expression MINUS expression .)
    EXP             reduce using rule 36 (expression -> expression MINUS expression .)
    COLON           reduce using rule 36 (expression -> expression MINUS expression .)
    RPTHESES        reduce using rule 36 (expression -> expression MINUS expression .)
    AND             reduce using rule 36 (expression -> expression MINUS expression .)
    OR              reduce using rule 36 (expression -> expression MINUS expression .)
    MULT            shift and go to state 61
    DIVIDE          shift and go to state 62

  ! MULT            [ reduce using rule 36 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 59 ]
  ! MINUS           [ shift and go to state 60 ]
  ! EXP             [ shift and go to state 63 ]


state 81

    (37) expression -> expression MULT expression .
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . MULT expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . EXP expression

    EQUAL           reduce using rule 37 (expression -> expression MULT expression .)
    NOTEQUAL        reduce using rule 37 (expression -> expression MULT expression .)
    GTHAN           reduce using rule 37 (expression -> expression MULT expression .)
    LTHAN           reduce using rule 37 (expression -> expression MULT expression .)
    GEQTHAN         reduce using rule 37 (expression -> expression MULT expression .)
    LEQTHAN         reduce using rule 37 (expression -> expression MULT expression .)
    PLUS            reduce using rule 37 (expression -> expression MULT expression .)
    MINUS           reduce using rule 37 (expression -> expression MULT expression .)
    MULT            reduce using rule 37 (expression -> expression MULT expression .)
    DIVIDE          reduce using rule 37 (expression -> expression MULT expression .)
    EXP             reduce using rule 37 (expression -> expression MULT expression .)
    COLON           reduce using rule 37 (expression -> expression MULT expression .)
    RPTHESES        reduce using rule 37 (expression -> expression MULT expression .)
    AND             reduce using rule 37 (expression -> expression MULT expression .)
    OR              reduce using rule 37 (expression -> expression MULT expression .)

  ! PLUS            [ shift and go to state 59 ]
  ! MINUS           [ shift and go to state 60 ]
  ! MULT            [ shift and go to state 61 ]
  ! DIVIDE          [ shift and go to state 62 ]
  ! EXP             [ shift and go to state 63 ]


state 82

    (38) expression -> expression DIVIDE expression .
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . MULT expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . EXP expression

    EQUAL           reduce using rule 38 (expression -> expression DIVIDE expression .)
    NOTEQUAL        reduce using rule 38 (expression -> expression DIVIDE expression .)
    GTHAN           reduce using rule 38 (expression -> expression DIVIDE expression .)
    LTHAN           reduce using rule 38 (expression -> expression DIVIDE expression .)
    GEQTHAN         reduce using rule 38 (expression -> expression DIVIDE expression .)
    LEQTHAN         reduce using rule 38 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 38 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 38 (expression -> expression DIVIDE expression .)
    MULT            reduce using rule 38 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 38 (expression -> expression DIVIDE expression .)
    EXP             reduce using rule 38 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 38 (expression -> expression DIVIDE expression .)
    RPTHESES        reduce using rule 38 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 38 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 38 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 59 ]
  ! MINUS           [ shift and go to state 60 ]
  ! MULT            [ shift and go to state 61 ]
  ! DIVIDE          [ shift and go to state 62 ]
  ! EXP             [ shift and go to state 63 ]


state 83

    (39) expression -> expression EXP expression .
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . MULT expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . EXP expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
    EQUAL           reduce using rule 39 (expression -> expression EXP expression .)
    NOTEQUAL        reduce using rule 39 (expression -> expression EXP expression .)
    GTHAN           reduce using rule 39 (expression -> expression EXP expression .)
    LTHAN           reduce using rule 39 (expression -> expression EXP expression .)
    GEQTHAN         reduce using rule 39 (expression -> expression EXP expression .)
    LEQTHAN         reduce using rule 39 (expression -> expression EXP expression .)
    COLON           reduce using rule 39 (expression -> expression EXP expression .)
    RPTHESES        reduce using rule 39 (expression -> expression EXP expression .)
    AND             reduce using rule 39 (expression -> expression EXP expression .)
    OR              reduce using rule 39 (expression -> expression EXP expression .)
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    MULT            shift and go to state 61
    DIVIDE          shift and go to state 62
    EXP             shift and go to state 63

  ! PLUS            [ reduce using rule 39 (expression -> expression EXP expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression EXP expression .) ]
  ! MULT            [ reduce using rule 39 (expression -> expression EXP expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression EXP expression .) ]
  ! EXP             [ reduce using rule 39 (expression -> expression EXP expression .) ]


state 84

    (19) for -> FOR LPTHESES stmntwrap condition COLON . expression RPTHESES LCURLY program RCURLY
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression MULT expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression EXP expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPTHESES expression RPTHESES
    (42) expression -> . INUM
    (43) expression -> . FNUM
    (44) expression -> . BOOLVAL
    (45) expression -> . STRVAL
    (46) expression -> . ID

    MINUS           shift and go to state 32
    LPTHESES        shift and go to state 27
    INUM            shift and go to state 33
    FNUM            shift and go to state 34
    BOOLVAL         shift and go to state 41
    STRVAL          shift and go to state 35
    ID              shift and go to state 36

    expression                     shift and go to state 87

state 85

    (12) ifblock -> IF LPTHESES condition RPTHESES LCURLY . program RCURLY ifcont
    (1) program -> . stmntwrap
    (2) program -> . block
    (3) program -> . while
    (4) program -> . for
    (5) program -> .
    (6) stmntwrap -> . statement COLON
    (11) block -> . ifblock
    (18) while -> . WHILE LPTHESES condition RPTHESES LCURLY program RCURLY
    (19) for -> . FOR LPTHESES stmntwrap condition COLON expression RPTHESES LCURLY program RCURLY
    (7) statement -> . INT ID is_assing
    (8) statement -> . FLOAT ID is_assing
    (9) statement -> . STRING ID is_assing
    (10) statement -> . BOOLEAN ID is_assing
    (33) statement -> . PRINT LPTHESES expression RPTHESES
    (34) statement -> . ID ASSIGN expression
    (12) ifblock -> . IF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont

    RCURLY          reduce using rule 5 (program -> .)
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    INT             shift and go to state 10
    FLOAT           shift and go to state 12
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 14
    PRINT           shift and go to state 15
    ID              shift and go to state 11
    IF              shift and go to state 16

    program                        shift and go to state 88
    stmntwrap                      shift and go to state 2
    block                          shift and go to state 3
    while                          shift and go to state 4
    for                            shift and go to state 5
    statement                      shift and go to state 6
    ifblock                        shift and go to state 7

state 86

    (18) while -> WHILE LPTHESES condition RPTHESES LCURLY program . RCURLY

    RCURLY          shift and go to state 89


state 87

    (19) for -> FOR LPTHESES stmntwrap condition COLON expression . RPTHESES LCURLY program RCURLY
    (35) expression -> expression . PLUS expression
    (36) expression -> expression . MINUS expression
    (37) expression -> expression . MULT expression
    (38) expression -> expression . DIVIDE expression
    (39) expression -> expression . EXP expression

    RPTHESES        shift and go to state 90
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    MULT            shift and go to state 61
    DIVIDE          shift and go to state 62
    EXP             shift and go to state 63


state 88

    (12) ifblock -> IF LPTHESES condition RPTHESES LCURLY program . RCURLY ifcont

    RCURLY          shift and go to state 91


state 89

    (18) while -> WHILE LPTHESES condition RPTHESES LCURLY program RCURLY .

    $end            reduce using rule 18 (while -> WHILE LPTHESES condition RPTHESES LCURLY program RCURLY .)
    RCURLY          reduce using rule 18 (while -> WHILE LPTHESES condition RPTHESES LCURLY program RCURLY .)


state 90

    (19) for -> FOR LPTHESES stmntwrap condition COLON expression RPTHESES . LCURLY program RCURLY

    LCURLY          shift and go to state 92


state 91

    (12) ifblock -> IF LPTHESES condition RPTHESES LCURLY program RCURLY . ifcont
    (13) ifcont -> . elifblock ifcont
    (14) ifcont -> . elseblock
    (15) ifcont -> .
    (17) elifblock -> . ELIF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont
    (16) elseblock -> . ELSE LCURLY program RCURLY

    $end            reduce using rule 15 (ifcont -> .)
    RCURLY          reduce using rule 15 (ifcont -> .)
    ELIF            shift and go to state 96
    ELSE            shift and go to state 97

    ifcont                         shift and go to state 93
    elifblock                      shift and go to state 94
    elseblock                      shift and go to state 95

state 92

    (19) for -> FOR LPTHESES stmntwrap condition COLON expression RPTHESES LCURLY . program RCURLY
    (1) program -> . stmntwrap
    (2) program -> . block
    (3) program -> . while
    (4) program -> . for
    (5) program -> .
    (6) stmntwrap -> . statement COLON
    (11) block -> . ifblock
    (18) while -> . WHILE LPTHESES condition RPTHESES LCURLY program RCURLY
    (19) for -> . FOR LPTHESES stmntwrap condition COLON expression RPTHESES LCURLY program RCURLY
    (7) statement -> . INT ID is_assing
    (8) statement -> . FLOAT ID is_assing
    (9) statement -> . STRING ID is_assing
    (10) statement -> . BOOLEAN ID is_assing
    (33) statement -> . PRINT LPTHESES expression RPTHESES
    (34) statement -> . ID ASSIGN expression
    (12) ifblock -> . IF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont

    RCURLY          reduce using rule 5 (program -> .)
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    INT             shift and go to state 10
    FLOAT           shift and go to state 12
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 14
    PRINT           shift and go to state 15
    ID              shift and go to state 11
    IF              shift and go to state 16

    stmntwrap                      shift and go to state 2
    program                        shift and go to state 98
    block                          shift and go to state 3
    while                          shift and go to state 4
    for                            shift and go to state 5
    statement                      shift and go to state 6
    ifblock                        shift and go to state 7

state 93

    (12) ifblock -> IF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont .

    $end            reduce using rule 12 (ifblock -> IF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont .)
    RCURLY          reduce using rule 12 (ifblock -> IF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont .)


state 94

    (13) ifcont -> elifblock . ifcont
    (13) ifcont -> . elifblock ifcont
    (14) ifcont -> . elseblock
    (15) ifcont -> .
    (17) elifblock -> . ELIF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont
    (16) elseblock -> . ELSE LCURLY program RCURLY

  ! shift/reduce conflict for ELIF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    $end            reduce using rule 15 (ifcont -> .)
    RCURLY          reduce using rule 15 (ifcont -> .)
    ELIF            shift and go to state 96
    ELSE            shift and go to state 97

  ! ELIF            [ reduce using rule 15 (ifcont -> .) ]
  ! ELSE            [ reduce using rule 15 (ifcont -> .) ]

    elifblock                      shift and go to state 94
    ifcont                         shift and go to state 99
    elseblock                      shift and go to state 95

state 95

    (14) ifcont -> elseblock .

    $end            reduce using rule 14 (ifcont -> elseblock .)
    RCURLY          reduce using rule 14 (ifcont -> elseblock .)
    ELIF            reduce using rule 14 (ifcont -> elseblock .)
    ELSE            reduce using rule 14 (ifcont -> elseblock .)


state 96

    (17) elifblock -> ELIF . LPTHESES condition RPTHESES LCURLY program RCURLY ifcont

    LPTHESES        shift and go to state 100


state 97

    (16) elseblock -> ELSE . LCURLY program RCURLY

    LCURLY          shift and go to state 101


state 98

    (19) for -> FOR LPTHESES stmntwrap condition COLON expression RPTHESES LCURLY program . RCURLY

    RCURLY          shift and go to state 102


state 99

    (13) ifcont -> elifblock ifcont .

    $end            reduce using rule 13 (ifcont -> elifblock ifcont .)
    RCURLY          reduce using rule 13 (ifcont -> elifblock ifcont .)
    ELIF            reduce using rule 13 (ifcont -> elifblock ifcont .)
    ELSE            reduce using rule 13 (ifcont -> elifblock ifcont .)


state 100

    (17) elifblock -> ELIF LPTHESES . condition RPTHESES LCURLY program RCURLY ifcont
    (20) condition -> . BOOLVAL appendcond
    (21) condition -> . comparison appendcond
    (25) comparison -> . expression EQUAL expression
    (26) comparison -> . expression NOTEQUAL expression
    (27) comparison -> . expression GTHAN expression
    (28) comparison -> . expression LTHAN expression
    (29) comparison -> . expression GEQTHAN expression
    (30) comparison -> . expression LEQTHAN expression
    (35) expression -> . expression PLUS expression
    (36) expression -> . expression MINUS expression
    (37) expression -> . expression MULT expression
    (38) expression -> . expression DIVIDE expression
    (39) expression -> . expression EXP expression
    (40) expression -> . MINUS expression
    (41) expression -> . LPTHESES expression RPTHESES
    (42) expression -> . INUM
    (43) expression -> . FNUM
    (44) expression -> . BOOLVAL
    (45) expression -> . STRVAL
    (46) expression -> . ID

    BOOLVAL         shift and go to state 29
    MINUS           shift and go to state 32
    LPTHESES        shift and go to state 27
    INUM            shift and go to state 33
    FNUM            shift and go to state 34
    STRVAL          shift and go to state 35
    ID              shift and go to state 36

    condition                      shift and go to state 103
    comparison                     shift and go to state 30
    expression                     shift and go to state 31

state 101

    (16) elseblock -> ELSE LCURLY . program RCURLY
    (1) program -> . stmntwrap
    (2) program -> . block
    (3) program -> . while
    (4) program -> . for
    (5) program -> .
    (6) stmntwrap -> . statement COLON
    (11) block -> . ifblock
    (18) while -> . WHILE LPTHESES condition RPTHESES LCURLY program RCURLY
    (19) for -> . FOR LPTHESES stmntwrap condition COLON expression RPTHESES LCURLY program RCURLY
    (7) statement -> . INT ID is_assing
    (8) statement -> . FLOAT ID is_assing
    (9) statement -> . STRING ID is_assing
    (10) statement -> . BOOLEAN ID is_assing
    (33) statement -> . PRINT LPTHESES expression RPTHESES
    (34) statement -> . ID ASSIGN expression
    (12) ifblock -> . IF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont

    RCURLY          reduce using rule 5 (program -> .)
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    INT             shift and go to state 10
    FLOAT           shift and go to state 12
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 14
    PRINT           shift and go to state 15
    ID              shift and go to state 11
    IF              shift and go to state 16

    program                        shift and go to state 104
    stmntwrap                      shift and go to state 2
    block                          shift and go to state 3
    while                          shift and go to state 4
    for                            shift and go to state 5
    statement                      shift and go to state 6
    ifblock                        shift and go to state 7

state 102

    (19) for -> FOR LPTHESES stmntwrap condition COLON expression RPTHESES LCURLY program RCURLY .

    $end            reduce using rule 19 (for -> FOR LPTHESES stmntwrap condition COLON expression RPTHESES LCURLY program RCURLY .)
    RCURLY          reduce using rule 19 (for -> FOR LPTHESES stmntwrap condition COLON expression RPTHESES LCURLY program RCURLY .)


state 103

    (17) elifblock -> ELIF LPTHESES condition . RPTHESES LCURLY program RCURLY ifcont

    RPTHESES        shift and go to state 105


state 104

    (16) elseblock -> ELSE LCURLY program . RCURLY

    RCURLY          shift and go to state 106


state 105

    (17) elifblock -> ELIF LPTHESES condition RPTHESES . LCURLY program RCURLY ifcont

    LCURLY          shift and go to state 107


state 106

    (16) elseblock -> ELSE LCURLY program RCURLY .

    $end            reduce using rule 16 (elseblock -> ELSE LCURLY program RCURLY .)
    RCURLY          reduce using rule 16 (elseblock -> ELSE LCURLY program RCURLY .)
    ELIF            reduce using rule 16 (elseblock -> ELSE LCURLY program RCURLY .)
    ELSE            reduce using rule 16 (elseblock -> ELSE LCURLY program RCURLY .)


state 107

    (17) elifblock -> ELIF LPTHESES condition RPTHESES LCURLY . program RCURLY ifcont
    (1) program -> . stmntwrap
    (2) program -> . block
    (3) program -> . while
    (4) program -> . for
    (5) program -> .
    (6) stmntwrap -> . statement COLON
    (11) block -> . ifblock
    (18) while -> . WHILE LPTHESES condition RPTHESES LCURLY program RCURLY
    (19) for -> . FOR LPTHESES stmntwrap condition COLON expression RPTHESES LCURLY program RCURLY
    (7) statement -> . INT ID is_assing
    (8) statement -> . FLOAT ID is_assing
    (9) statement -> . STRING ID is_assing
    (10) statement -> . BOOLEAN ID is_assing
    (33) statement -> . PRINT LPTHESES expression RPTHESES
    (34) statement -> . ID ASSIGN expression
    (12) ifblock -> . IF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont

    RCURLY          reduce using rule 5 (program -> .)
    WHILE           shift and go to state 8
    FOR             shift and go to state 9
    INT             shift and go to state 10
    FLOAT           shift and go to state 12
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 14
    PRINT           shift and go to state 15
    ID              shift and go to state 11
    IF              shift and go to state 16

    program                        shift and go to state 108
    stmntwrap                      shift and go to state 2
    block                          shift and go to state 3
    while                          shift and go to state 4
    for                            shift and go to state 5
    statement                      shift and go to state 6
    ifblock                        shift and go to state 7

state 108

    (17) elifblock -> ELIF LPTHESES condition RPTHESES LCURLY program . RCURLY ifcont

    RCURLY          shift and go to state 109


state 109

    (17) elifblock -> ELIF LPTHESES condition RPTHESES LCURLY program RCURLY . ifcont
    (13) ifcont -> . elifblock ifcont
    (14) ifcont -> . elseblock
    (15) ifcont -> .
    (17) elifblock -> . ELIF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont
    (16) elseblock -> . ELSE LCURLY program RCURLY

  ! shift/reduce conflict for ELIF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    $end            reduce using rule 15 (ifcont -> .)
    RCURLY          reduce using rule 15 (ifcont -> .)
    ELIF            shift and go to state 96
    ELSE            shift and go to state 97

  ! ELIF            [ reduce using rule 15 (ifcont -> .) ]
  ! ELSE            [ reduce using rule 15 (ifcont -> .) ]

    ifcont                         shift and go to state 110
    elifblock                      shift and go to state 94
    elseblock                      shift and go to state 95

state 110

    (17) elifblock -> ELIF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont .

    ELIF            reduce using rule 17 (elifblock -> ELIF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont .)
    ELSE            reduce using rule 17 (elifblock -> ELIF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont .)
    $end            reduce using rule 17 (elifblock -> ELIF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont .)
    RCURLY          reduce using rule 17 (elifblock -> ELIF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MULT in state 83 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 83 resolved as shift
WARNING: shift/reduce conflict for EXP in state 83 resolved as shift
WARNING: shift/reduce conflict for ELIF in state 94 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 94 resolved as shift
WARNING: shift/reduce conflict for ELIF in state 109 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 109 resolved as shift
