Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BOOLEAN
    COLON
    ELIF
    ELSE
    EQUAL
    FALSE
    GEQTHAN
    GTHAN
    IF
    LCURLY
    LEQTHAN
    LTHAN
    NOTEQUAL
    OR
    RCURLY
    STRING
    TRUE

Grammar

Rule 0     S' -> statement
Rule 1     statement -> INT ID is_assing
Rule 2     statement -> FLOAT ID is_assing
Rule 3     is_assing -> ASSIGN expression
Rule 4     is_assing -> <empty>
Rule 5     statement -> PRINT LPTHESES expression RPTHESES
Rule 6     statement -> ID ASSIGN expression
Rule 7     expression -> expression PLUS expression
Rule 8     expression -> expression MINUS expression
Rule 9     expression -> expression MULT expression
Rule 10    expression -> expression DIVIDE expression
Rule 11    expression -> expression EXP expression
Rule 12    expression -> MINUS expression
Rule 13    expression -> LPTHESES expression RPTHESES
Rule 14    expression -> INUM
Rule 15    expression -> FNUM
Rule 16    expression -> ID

Terminals, with rules where they appear

AND                  : 
ASSIGN               : 3 6
BOOLEAN              : 
COLON                : 
DIVIDE               : 10
ELIF                 : 
ELSE                 : 
EQUAL                : 
EXP                  : 11
FALSE                : 
FLOAT                : 2
FNUM                 : 15
GEQTHAN              : 
GTHAN                : 
ID                   : 1 2 6 16
IF                   : 
INT                  : 1
INUM                 : 14
LCURLY               : 
LEQTHAN              : 
LPTHESES             : 5 13
LTHAN                : 
MINUS                : 8 12
MULT                 : 9
NOTEQUAL             : 
OR                   : 
PLUS                 : 7
PRINT                : 5
RCURLY               : 
RPTHESES             : 5 13
STRING               : 
TRUE                 : 
error                : 

Nonterminals, with rules where they appear

expression           : 3 5 6 7 7 8 8 9 9 10 10 11 11 12 13
is_assing            : 1 2
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . INT ID is_assing
    (2) statement -> . FLOAT ID is_assing
    (5) statement -> . PRINT LPTHESES expression RPTHESES
    (6) statement -> . ID ASSIGN expression

    INT             shift and go to state 2
    FLOAT           shift and go to state 4
    PRINT           shift and go to state 5
    ID              shift and go to state 3

    statement                      shift and go to state 1

state 1

    (0) S' -> statement .



state 2

    (1) statement -> INT . ID is_assing

    ID              shift and go to state 6


state 3

    (6) statement -> ID . ASSIGN expression

    ASSIGN          shift and go to state 7


state 4

    (2) statement -> FLOAT . ID is_assing

    ID              shift and go to state 8


state 5

    (5) statement -> PRINT . LPTHESES expression RPTHESES

    LPTHESES        shift and go to state 9


state 6

    (1) statement -> INT ID . is_assing
    (3) is_assing -> . ASSIGN expression
    (4) is_assing -> .

    ASSIGN          shift and go to state 11
    $end            reduce using rule 4 (is_assing -> .)

    is_assing                      shift and go to state 10

state 7

    (6) statement -> ID ASSIGN . expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression EXP expression
    (12) expression -> . MINUS expression
    (13) expression -> . LPTHESES expression RPTHESES
    (14) expression -> . INUM
    (15) expression -> . FNUM
    (16) expression -> . ID

    MINUS           shift and go to state 14
    LPTHESES        shift and go to state 15
    INUM            shift and go to state 16
    FNUM            shift and go to state 17
    ID              shift and go to state 12

    expression                     shift and go to state 13

state 8

    (2) statement -> FLOAT ID . is_assing
    (3) is_assing -> . ASSIGN expression
    (4) is_assing -> .

    ASSIGN          shift and go to state 11
    $end            reduce using rule 4 (is_assing -> .)

    is_assing                      shift and go to state 18

state 9

    (5) statement -> PRINT LPTHESES . expression RPTHESES
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression EXP expression
    (12) expression -> . MINUS expression
    (13) expression -> . LPTHESES expression RPTHESES
    (14) expression -> . INUM
    (15) expression -> . FNUM
    (16) expression -> . ID

    MINUS           shift and go to state 14
    LPTHESES        shift and go to state 15
    INUM            shift and go to state 16
    FNUM            shift and go to state 17
    ID              shift and go to state 12

    expression                     shift and go to state 19

state 10

    (1) statement -> INT ID is_assing .

    $end            reduce using rule 1 (statement -> INT ID is_assing .)


state 11

    (3) is_assing -> ASSIGN . expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression EXP expression
    (12) expression -> . MINUS expression
    (13) expression -> . LPTHESES expression RPTHESES
    (14) expression -> . INUM
    (15) expression -> . FNUM
    (16) expression -> . ID

    MINUS           shift and go to state 14
    LPTHESES        shift and go to state 15
    INUM            shift and go to state 16
    FNUM            shift and go to state 17
    ID              shift and go to state 12

    expression                     shift and go to state 20

state 12

    (16) expression -> ID .

    PLUS            reduce using rule 16 (expression -> ID .)
    MINUS           reduce using rule 16 (expression -> ID .)
    MULT            reduce using rule 16 (expression -> ID .)
    DIVIDE          reduce using rule 16 (expression -> ID .)
    EXP             reduce using rule 16 (expression -> ID .)
    $end            reduce using rule 16 (expression -> ID .)
    RPTHESES        reduce using rule 16 (expression -> ID .)


state 13

    (6) statement -> ID ASSIGN expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . EXP expression

    $end            reduce using rule 6 (statement -> ID ASSIGN expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    MULT            shift and go to state 23
    DIVIDE          shift and go to state 24
    EXP             shift and go to state 25


state 14

    (12) expression -> MINUS . expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression EXP expression
    (12) expression -> . MINUS expression
    (13) expression -> . LPTHESES expression RPTHESES
    (14) expression -> . INUM
    (15) expression -> . FNUM
    (16) expression -> . ID

    MINUS           shift and go to state 14
    LPTHESES        shift and go to state 15
    INUM            shift and go to state 16
    FNUM            shift and go to state 17
    ID              shift and go to state 12

    expression                     shift and go to state 26

state 15

    (13) expression -> LPTHESES . expression RPTHESES
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression EXP expression
    (12) expression -> . MINUS expression
    (13) expression -> . LPTHESES expression RPTHESES
    (14) expression -> . INUM
    (15) expression -> . FNUM
    (16) expression -> . ID

    MINUS           shift and go to state 14
    LPTHESES        shift and go to state 15
    INUM            shift and go to state 16
    FNUM            shift and go to state 17
    ID              shift and go to state 12

    expression                     shift and go to state 27

state 16

    (14) expression -> INUM .

    PLUS            reduce using rule 14 (expression -> INUM .)
    MINUS           reduce using rule 14 (expression -> INUM .)
    MULT            reduce using rule 14 (expression -> INUM .)
    DIVIDE          reduce using rule 14 (expression -> INUM .)
    EXP             reduce using rule 14 (expression -> INUM .)
    $end            reduce using rule 14 (expression -> INUM .)
    RPTHESES        reduce using rule 14 (expression -> INUM .)


state 17

    (15) expression -> FNUM .

    PLUS            reduce using rule 15 (expression -> FNUM .)
    MINUS           reduce using rule 15 (expression -> FNUM .)
    MULT            reduce using rule 15 (expression -> FNUM .)
    DIVIDE          reduce using rule 15 (expression -> FNUM .)
    EXP             reduce using rule 15 (expression -> FNUM .)
    $end            reduce using rule 15 (expression -> FNUM .)
    RPTHESES        reduce using rule 15 (expression -> FNUM .)


state 18

    (2) statement -> FLOAT ID is_assing .

    $end            reduce using rule 2 (statement -> FLOAT ID is_assing .)


state 19

    (5) statement -> PRINT LPTHESES expression . RPTHESES
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . EXP expression

    RPTHESES        shift and go to state 28
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    MULT            shift and go to state 23
    DIVIDE          shift and go to state 24
    EXP             shift and go to state 25


state 20

    (3) is_assing -> ASSIGN expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . EXP expression

    $end            reduce using rule 3 (is_assing -> ASSIGN expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    MULT            shift and go to state 23
    DIVIDE          shift and go to state 24
    EXP             shift and go to state 25


state 21

    (7) expression -> expression PLUS . expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression EXP expression
    (12) expression -> . MINUS expression
    (13) expression -> . LPTHESES expression RPTHESES
    (14) expression -> . INUM
    (15) expression -> . FNUM
    (16) expression -> . ID

    MINUS           shift and go to state 14
    LPTHESES        shift and go to state 15
    INUM            shift and go to state 16
    FNUM            shift and go to state 17
    ID              shift and go to state 12

    expression                     shift and go to state 29

state 22

    (8) expression -> expression MINUS . expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression EXP expression
    (12) expression -> . MINUS expression
    (13) expression -> . LPTHESES expression RPTHESES
    (14) expression -> . INUM
    (15) expression -> . FNUM
    (16) expression -> . ID

    MINUS           shift and go to state 14
    LPTHESES        shift and go to state 15
    INUM            shift and go to state 16
    FNUM            shift and go to state 17
    ID              shift and go to state 12

    expression                     shift and go to state 30

state 23

    (9) expression -> expression MULT . expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression EXP expression
    (12) expression -> . MINUS expression
    (13) expression -> . LPTHESES expression RPTHESES
    (14) expression -> . INUM
    (15) expression -> . FNUM
    (16) expression -> . ID

    MINUS           shift and go to state 14
    LPTHESES        shift and go to state 15
    INUM            shift and go to state 16
    FNUM            shift and go to state 17
    ID              shift and go to state 12

    expression                     shift and go to state 31

state 24

    (10) expression -> expression DIVIDE . expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression EXP expression
    (12) expression -> . MINUS expression
    (13) expression -> . LPTHESES expression RPTHESES
    (14) expression -> . INUM
    (15) expression -> . FNUM
    (16) expression -> . ID

    MINUS           shift and go to state 14
    LPTHESES        shift and go to state 15
    INUM            shift and go to state 16
    FNUM            shift and go to state 17
    ID              shift and go to state 12

    expression                     shift and go to state 32

state 25

    (11) expression -> expression EXP . expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression MULT expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . expression EXP expression
    (12) expression -> . MINUS expression
    (13) expression -> . LPTHESES expression RPTHESES
    (14) expression -> . INUM
    (15) expression -> . FNUM
    (16) expression -> . ID

    MINUS           shift and go to state 14
    LPTHESES        shift and go to state 15
    INUM            shift and go to state 16
    FNUM            shift and go to state 17
    ID              shift and go to state 12

    expression                     shift and go to state 33

state 26

    (12) expression -> MINUS expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . EXP expression

    PLUS            reduce using rule 12 (expression -> MINUS expression .)
    MINUS           reduce using rule 12 (expression -> MINUS expression .)
    MULT            reduce using rule 12 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 12 (expression -> MINUS expression .)
    EXP             reduce using rule 12 (expression -> MINUS expression .)
    $end            reduce using rule 12 (expression -> MINUS expression .)
    RPTHESES        reduce using rule 12 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 22 ]
  ! MULT            [ shift and go to state 23 ]
  ! DIVIDE          [ shift and go to state 24 ]
  ! EXP             [ shift and go to state 25 ]


state 27

    (13) expression -> LPTHESES expression . RPTHESES
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . EXP expression

    RPTHESES        shift and go to state 34
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    MULT            shift and go to state 23
    DIVIDE          shift and go to state 24
    EXP             shift and go to state 25


state 28

    (5) statement -> PRINT LPTHESES expression RPTHESES .

    $end            reduce using rule 5 (statement -> PRINT LPTHESES expression RPTHESES .)


state 29

    (7) expression -> expression PLUS expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . EXP expression

    PLUS            reduce using rule 7 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 7 (expression -> expression PLUS expression .)
    EXP             reduce using rule 7 (expression -> expression PLUS expression .)
    $end            reduce using rule 7 (expression -> expression PLUS expression .)
    RPTHESES        reduce using rule 7 (expression -> expression PLUS expression .)
    MULT            shift and go to state 23
    DIVIDE          shift and go to state 24

  ! MULT            [ reduce using rule 7 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 7 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 22 ]
  ! EXP             [ shift and go to state 25 ]


state 30

    (8) expression -> expression MINUS expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . EXP expression

    PLUS            reduce using rule 8 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 8 (expression -> expression MINUS expression .)
    EXP             reduce using rule 8 (expression -> expression MINUS expression .)
    $end            reduce using rule 8 (expression -> expression MINUS expression .)
    RPTHESES        reduce using rule 8 (expression -> expression MINUS expression .)
    MULT            shift and go to state 23
    DIVIDE          shift and go to state 24

  ! MULT            [ reduce using rule 8 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 8 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 22 ]
  ! EXP             [ shift and go to state 25 ]


state 31

    (9) expression -> expression MULT expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . EXP expression

    PLUS            reduce using rule 9 (expression -> expression MULT expression .)
    MINUS           reduce using rule 9 (expression -> expression MULT expression .)
    MULT            reduce using rule 9 (expression -> expression MULT expression .)
    DIVIDE          reduce using rule 9 (expression -> expression MULT expression .)
    EXP             reduce using rule 9 (expression -> expression MULT expression .)
    $end            reduce using rule 9 (expression -> expression MULT expression .)
    RPTHESES        reduce using rule 9 (expression -> expression MULT expression .)

  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 22 ]
  ! MULT            [ shift and go to state 23 ]
  ! DIVIDE          [ shift and go to state 24 ]
  ! EXP             [ shift and go to state 25 ]


state 32

    (10) expression -> expression DIVIDE expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . EXP expression

    PLUS            reduce using rule 10 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 10 (expression -> expression DIVIDE expression .)
    MULT            reduce using rule 10 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 10 (expression -> expression DIVIDE expression .)
    EXP             reduce using rule 10 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 10 (expression -> expression DIVIDE expression .)
    RPTHESES        reduce using rule 10 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 21 ]
  ! MINUS           [ shift and go to state 22 ]
  ! MULT            [ shift and go to state 23 ]
  ! DIVIDE          [ shift and go to state 24 ]
  ! EXP             [ shift and go to state 25 ]


state 33

    (11) expression -> expression EXP expression .
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . MULT expression
    (10) expression -> expression . DIVIDE expression
    (11) expression -> expression . EXP expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
    $end            reduce using rule 11 (expression -> expression EXP expression .)
    RPTHESES        reduce using rule 11 (expression -> expression EXP expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    MULT            shift and go to state 23
    DIVIDE          shift and go to state 24
    EXP             shift and go to state 25

  ! PLUS            [ reduce using rule 11 (expression -> expression EXP expression .) ]
  ! MINUS           [ reduce using rule 11 (expression -> expression EXP expression .) ]
  ! MULT            [ reduce using rule 11 (expression -> expression EXP expression .) ]
  ! DIVIDE          [ reduce using rule 11 (expression -> expression EXP expression .) ]
  ! EXP             [ reduce using rule 11 (expression -> expression EXP expression .) ]


state 34

    (13) expression -> LPTHESES expression RPTHESES .

    PLUS            reduce using rule 13 (expression -> LPTHESES expression RPTHESES .)
    MINUS           reduce using rule 13 (expression -> LPTHESES expression RPTHESES .)
    MULT            reduce using rule 13 (expression -> LPTHESES expression RPTHESES .)
    DIVIDE          reduce using rule 13 (expression -> LPTHESES expression RPTHESES .)
    EXP             reduce using rule 13 (expression -> LPTHESES expression RPTHESES .)
    $end            reduce using rule 13 (expression -> LPTHESES expression RPTHESES .)
    RPTHESES        reduce using rule 13 (expression -> LPTHESES expression RPTHESES .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 33 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 33 resolved as shift
WARNING: shift/reduce conflict for MULT in state 33 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 33 resolved as shift
WARNING: shift/reduce conflict for EXP in state 33 resolved as shift
