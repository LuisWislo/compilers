Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    COLON
    ELIF
    ELSE
    EQUAL
    GEQTHAN
    GTHAN
    IF
    LCURLY
    LEQTHAN
    LTHAN
    NOTEQUAL
    OR
    RCURLY

Grammar

Rule 0     S' -> statement
Rule 1     statement -> INT ID is_assing
Rule 2     statement -> FLOAT ID is_assing
Rule 3     statement -> STRING ID is_assing
Rule 4     statement -> BOOLEAN ID is_assing
Rule 5     is_assing -> ASSIGN expression
Rule 6     is_assing -> <empty>
Rule 7     statement -> PRINT LPTHESES expression RPTHESES
Rule 8     statement -> ID ASSIGN expression
Rule 9     expression -> expression PLUS expression
Rule 10    expression -> expression MINUS expression
Rule 11    expression -> expression MULT expression
Rule 12    expression -> expression DIVIDE expression
Rule 13    expression -> expression EXP expression
Rule 14    expression -> MINUS expression
Rule 15    expression -> LPTHESES expression RPTHESES
Rule 16    expression -> INUM
Rule 17    expression -> FNUM
Rule 18    expression -> BOOLVAL
Rule 19    expression -> STRVAL
Rule 20    expression -> ID

Terminals, with rules where they appear

AND                  : 
ASSIGN               : 5 8
BOOLEAN              : 4
BOOLVAL              : 18
COLON                : 
DIVIDE               : 12
ELIF                 : 
ELSE                 : 
EQUAL                : 
EXP                  : 13
FLOAT                : 2
FNUM                 : 17
GEQTHAN              : 
GTHAN                : 
ID                   : 1 2 3 4 8 20
IF                   : 
INT                  : 1
INUM                 : 16
LCURLY               : 
LEQTHAN              : 
LPTHESES             : 7 15
LTHAN                : 
MINUS                : 10 14
MULT                 : 11
NOTEQUAL             : 
OR                   : 
PLUS                 : 9
PRINT                : 7
RCURLY               : 
RPTHESES             : 7 15
STRING               : 3
STRVAL               : 19
error                : 

Nonterminals, with rules where they appear

expression           : 5 7 8 9 9 10 10 11 11 12 12 13 13 14 15
is_assing            : 1 2 3 4
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . INT ID is_assing
    (2) statement -> . FLOAT ID is_assing
    (3) statement -> . STRING ID is_assing
    (4) statement -> . BOOLEAN ID is_assing
    (7) statement -> . PRINT LPTHESES expression RPTHESES
    (8) statement -> . ID ASSIGN expression

    INT             shift and go to state 2
    FLOAT           shift and go to state 4
    STRING          shift and go to state 5
    BOOLEAN         shift and go to state 6
    PRINT           shift and go to state 7
    ID              shift and go to state 3

    statement                      shift and go to state 1

state 1

    (0) S' -> statement .



state 2

    (1) statement -> INT . ID is_assing

    ID              shift and go to state 8


state 3

    (8) statement -> ID . ASSIGN expression

    ASSIGN          shift and go to state 9


state 4

    (2) statement -> FLOAT . ID is_assing

    ID              shift and go to state 10


state 5

    (3) statement -> STRING . ID is_assing

    ID              shift and go to state 11


state 6

    (4) statement -> BOOLEAN . ID is_assing

    ID              shift and go to state 12


state 7

    (7) statement -> PRINT . LPTHESES expression RPTHESES

    LPTHESES        shift and go to state 13


state 8

    (1) statement -> INT ID . is_assing
    (5) is_assing -> . ASSIGN expression
    (6) is_assing -> .

    ASSIGN          shift and go to state 15
    $end            reduce using rule 6 (is_assing -> .)

    is_assing                      shift and go to state 14

state 9

    (8) statement -> ID ASSIGN . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression MULT expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression EXP expression
    (14) expression -> . MINUS expression
    (15) expression -> . LPTHESES expression RPTHESES
    (16) expression -> . INUM
    (17) expression -> . FNUM
    (18) expression -> . BOOLVAL
    (19) expression -> . STRVAL
    (20) expression -> . ID

    MINUS           shift and go to state 18
    LPTHESES        shift and go to state 19
    INUM            shift and go to state 20
    FNUM            shift and go to state 21
    BOOLVAL         shift and go to state 22
    STRVAL          shift and go to state 23
    ID              shift and go to state 16

    expression                     shift and go to state 17

state 10

    (2) statement -> FLOAT ID . is_assing
    (5) is_assing -> . ASSIGN expression
    (6) is_assing -> .

    ASSIGN          shift and go to state 15
    $end            reduce using rule 6 (is_assing -> .)

    is_assing                      shift and go to state 24

state 11

    (3) statement -> STRING ID . is_assing
    (5) is_assing -> . ASSIGN expression
    (6) is_assing -> .

    ASSIGN          shift and go to state 15
    $end            reduce using rule 6 (is_assing -> .)

    is_assing                      shift and go to state 25

state 12

    (4) statement -> BOOLEAN ID . is_assing
    (5) is_assing -> . ASSIGN expression
    (6) is_assing -> .

    ASSIGN          shift and go to state 15
    $end            reduce using rule 6 (is_assing -> .)

    is_assing                      shift and go to state 26

state 13

    (7) statement -> PRINT LPTHESES . expression RPTHESES
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression MULT expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression EXP expression
    (14) expression -> . MINUS expression
    (15) expression -> . LPTHESES expression RPTHESES
    (16) expression -> . INUM
    (17) expression -> . FNUM
    (18) expression -> . BOOLVAL
    (19) expression -> . STRVAL
    (20) expression -> . ID

    MINUS           shift and go to state 18
    LPTHESES        shift and go to state 19
    INUM            shift and go to state 20
    FNUM            shift and go to state 21
    BOOLVAL         shift and go to state 22
    STRVAL          shift and go to state 23
    ID              shift and go to state 16

    expression                     shift and go to state 27

state 14

    (1) statement -> INT ID is_assing .

    $end            reduce using rule 1 (statement -> INT ID is_assing .)


state 15

    (5) is_assing -> ASSIGN . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression MULT expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression EXP expression
    (14) expression -> . MINUS expression
    (15) expression -> . LPTHESES expression RPTHESES
    (16) expression -> . INUM
    (17) expression -> . FNUM
    (18) expression -> . BOOLVAL
    (19) expression -> . STRVAL
    (20) expression -> . ID

    MINUS           shift and go to state 18
    LPTHESES        shift and go to state 19
    INUM            shift and go to state 20
    FNUM            shift and go to state 21
    BOOLVAL         shift and go to state 22
    STRVAL          shift and go to state 23
    ID              shift and go to state 16

    expression                     shift and go to state 28

state 16

    (20) expression -> ID .

    PLUS            reduce using rule 20 (expression -> ID .)
    MINUS           reduce using rule 20 (expression -> ID .)
    MULT            reduce using rule 20 (expression -> ID .)
    DIVIDE          reduce using rule 20 (expression -> ID .)
    EXP             reduce using rule 20 (expression -> ID .)
    $end            reduce using rule 20 (expression -> ID .)
    RPTHESES        reduce using rule 20 (expression -> ID .)


state 17

    (8) statement -> ID ASSIGN expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . MULT expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . EXP expression

    $end            reduce using rule 8 (statement -> ID ASSIGN expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    MULT            shift and go to state 31
    DIVIDE          shift and go to state 32
    EXP             shift and go to state 33


state 18

    (14) expression -> MINUS . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression MULT expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression EXP expression
    (14) expression -> . MINUS expression
    (15) expression -> . LPTHESES expression RPTHESES
    (16) expression -> . INUM
    (17) expression -> . FNUM
    (18) expression -> . BOOLVAL
    (19) expression -> . STRVAL
    (20) expression -> . ID

    MINUS           shift and go to state 18
    LPTHESES        shift and go to state 19
    INUM            shift and go to state 20
    FNUM            shift and go to state 21
    BOOLVAL         shift and go to state 22
    STRVAL          shift and go to state 23
    ID              shift and go to state 16

    expression                     shift and go to state 34

state 19

    (15) expression -> LPTHESES . expression RPTHESES
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression MULT expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression EXP expression
    (14) expression -> . MINUS expression
    (15) expression -> . LPTHESES expression RPTHESES
    (16) expression -> . INUM
    (17) expression -> . FNUM
    (18) expression -> . BOOLVAL
    (19) expression -> . STRVAL
    (20) expression -> . ID

    MINUS           shift and go to state 18
    LPTHESES        shift and go to state 19
    INUM            shift and go to state 20
    FNUM            shift and go to state 21
    BOOLVAL         shift and go to state 22
    STRVAL          shift and go to state 23
    ID              shift and go to state 16

    expression                     shift and go to state 35

state 20

    (16) expression -> INUM .

    PLUS            reduce using rule 16 (expression -> INUM .)
    MINUS           reduce using rule 16 (expression -> INUM .)
    MULT            reduce using rule 16 (expression -> INUM .)
    DIVIDE          reduce using rule 16 (expression -> INUM .)
    EXP             reduce using rule 16 (expression -> INUM .)
    $end            reduce using rule 16 (expression -> INUM .)
    RPTHESES        reduce using rule 16 (expression -> INUM .)


state 21

    (17) expression -> FNUM .

    PLUS            reduce using rule 17 (expression -> FNUM .)
    MINUS           reduce using rule 17 (expression -> FNUM .)
    MULT            reduce using rule 17 (expression -> FNUM .)
    DIVIDE          reduce using rule 17 (expression -> FNUM .)
    EXP             reduce using rule 17 (expression -> FNUM .)
    $end            reduce using rule 17 (expression -> FNUM .)
    RPTHESES        reduce using rule 17 (expression -> FNUM .)


state 22

    (18) expression -> BOOLVAL .

    PLUS            reduce using rule 18 (expression -> BOOLVAL .)
    MINUS           reduce using rule 18 (expression -> BOOLVAL .)
    MULT            reduce using rule 18 (expression -> BOOLVAL .)
    DIVIDE          reduce using rule 18 (expression -> BOOLVAL .)
    EXP             reduce using rule 18 (expression -> BOOLVAL .)
    $end            reduce using rule 18 (expression -> BOOLVAL .)
    RPTHESES        reduce using rule 18 (expression -> BOOLVAL .)


state 23

    (19) expression -> STRVAL .

    PLUS            reduce using rule 19 (expression -> STRVAL .)
    MINUS           reduce using rule 19 (expression -> STRVAL .)
    MULT            reduce using rule 19 (expression -> STRVAL .)
    DIVIDE          reduce using rule 19 (expression -> STRVAL .)
    EXP             reduce using rule 19 (expression -> STRVAL .)
    $end            reduce using rule 19 (expression -> STRVAL .)
    RPTHESES        reduce using rule 19 (expression -> STRVAL .)


state 24

    (2) statement -> FLOAT ID is_assing .

    $end            reduce using rule 2 (statement -> FLOAT ID is_assing .)


state 25

    (3) statement -> STRING ID is_assing .

    $end            reduce using rule 3 (statement -> STRING ID is_assing .)


state 26

    (4) statement -> BOOLEAN ID is_assing .

    $end            reduce using rule 4 (statement -> BOOLEAN ID is_assing .)


state 27

    (7) statement -> PRINT LPTHESES expression . RPTHESES
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . MULT expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . EXP expression

    RPTHESES        shift and go to state 36
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    MULT            shift and go to state 31
    DIVIDE          shift and go to state 32
    EXP             shift and go to state 33


state 28

    (5) is_assing -> ASSIGN expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . MULT expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . EXP expression

    $end            reduce using rule 5 (is_assing -> ASSIGN expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    MULT            shift and go to state 31
    DIVIDE          shift and go to state 32
    EXP             shift and go to state 33


state 29

    (9) expression -> expression PLUS . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression MULT expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression EXP expression
    (14) expression -> . MINUS expression
    (15) expression -> . LPTHESES expression RPTHESES
    (16) expression -> . INUM
    (17) expression -> . FNUM
    (18) expression -> . BOOLVAL
    (19) expression -> . STRVAL
    (20) expression -> . ID

    MINUS           shift and go to state 18
    LPTHESES        shift and go to state 19
    INUM            shift and go to state 20
    FNUM            shift and go to state 21
    BOOLVAL         shift and go to state 22
    STRVAL          shift and go to state 23
    ID              shift and go to state 16

    expression                     shift and go to state 37

state 30

    (10) expression -> expression MINUS . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression MULT expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression EXP expression
    (14) expression -> . MINUS expression
    (15) expression -> . LPTHESES expression RPTHESES
    (16) expression -> . INUM
    (17) expression -> . FNUM
    (18) expression -> . BOOLVAL
    (19) expression -> . STRVAL
    (20) expression -> . ID

    MINUS           shift and go to state 18
    LPTHESES        shift and go to state 19
    INUM            shift and go to state 20
    FNUM            shift and go to state 21
    BOOLVAL         shift and go to state 22
    STRVAL          shift and go to state 23
    ID              shift and go to state 16

    expression                     shift and go to state 38

state 31

    (11) expression -> expression MULT . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression MULT expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression EXP expression
    (14) expression -> . MINUS expression
    (15) expression -> . LPTHESES expression RPTHESES
    (16) expression -> . INUM
    (17) expression -> . FNUM
    (18) expression -> . BOOLVAL
    (19) expression -> . STRVAL
    (20) expression -> . ID

    MINUS           shift and go to state 18
    LPTHESES        shift and go to state 19
    INUM            shift and go to state 20
    FNUM            shift and go to state 21
    BOOLVAL         shift and go to state 22
    STRVAL          shift and go to state 23
    ID              shift and go to state 16

    expression                     shift and go to state 39

state 32

    (12) expression -> expression DIVIDE . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression MULT expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression EXP expression
    (14) expression -> . MINUS expression
    (15) expression -> . LPTHESES expression RPTHESES
    (16) expression -> . INUM
    (17) expression -> . FNUM
    (18) expression -> . BOOLVAL
    (19) expression -> . STRVAL
    (20) expression -> . ID

    MINUS           shift and go to state 18
    LPTHESES        shift and go to state 19
    INUM            shift and go to state 20
    FNUM            shift and go to state 21
    BOOLVAL         shift and go to state 22
    STRVAL          shift and go to state 23
    ID              shift and go to state 16

    expression                     shift and go to state 40

state 33

    (13) expression -> expression EXP . expression
    (9) expression -> . expression PLUS expression
    (10) expression -> . expression MINUS expression
    (11) expression -> . expression MULT expression
    (12) expression -> . expression DIVIDE expression
    (13) expression -> . expression EXP expression
    (14) expression -> . MINUS expression
    (15) expression -> . LPTHESES expression RPTHESES
    (16) expression -> . INUM
    (17) expression -> . FNUM
    (18) expression -> . BOOLVAL
    (19) expression -> . STRVAL
    (20) expression -> . ID

    MINUS           shift and go to state 18
    LPTHESES        shift and go to state 19
    INUM            shift and go to state 20
    FNUM            shift and go to state 21
    BOOLVAL         shift and go to state 22
    STRVAL          shift and go to state 23
    ID              shift and go to state 16

    expression                     shift and go to state 41

state 34

    (14) expression -> MINUS expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . MULT expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . EXP expression

    PLUS            reduce using rule 14 (expression -> MINUS expression .)
    MINUS           reduce using rule 14 (expression -> MINUS expression .)
    MULT            reduce using rule 14 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 14 (expression -> MINUS expression .)
    EXP             reduce using rule 14 (expression -> MINUS expression .)
    $end            reduce using rule 14 (expression -> MINUS expression .)
    RPTHESES        reduce using rule 14 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! MULT            [ shift and go to state 31 ]
  ! DIVIDE          [ shift and go to state 32 ]
  ! EXP             [ shift and go to state 33 ]


state 35

    (15) expression -> LPTHESES expression . RPTHESES
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . MULT expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . EXP expression

    RPTHESES        shift and go to state 42
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    MULT            shift and go to state 31
    DIVIDE          shift and go to state 32
    EXP             shift and go to state 33


state 36

    (7) statement -> PRINT LPTHESES expression RPTHESES .

    $end            reduce using rule 7 (statement -> PRINT LPTHESES expression RPTHESES .)


state 37

    (9) expression -> expression PLUS expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . MULT expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . EXP expression

    PLUS            reduce using rule 9 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 9 (expression -> expression PLUS expression .)
    EXP             reduce using rule 9 (expression -> expression PLUS expression .)
    $end            reduce using rule 9 (expression -> expression PLUS expression .)
    RPTHESES        reduce using rule 9 (expression -> expression PLUS expression .)
    MULT            shift and go to state 31
    DIVIDE          shift and go to state 32

  ! MULT            [ reduce using rule 9 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 9 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! EXP             [ shift and go to state 33 ]


state 38

    (10) expression -> expression MINUS expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . MULT expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . EXP expression

    PLUS            reduce using rule 10 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 10 (expression -> expression MINUS expression .)
    EXP             reduce using rule 10 (expression -> expression MINUS expression .)
    $end            reduce using rule 10 (expression -> expression MINUS expression .)
    RPTHESES        reduce using rule 10 (expression -> expression MINUS expression .)
    MULT            shift and go to state 31
    DIVIDE          shift and go to state 32

  ! MULT            [ reduce using rule 10 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 10 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! EXP             [ shift and go to state 33 ]


state 39

    (11) expression -> expression MULT expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . MULT expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . EXP expression

    PLUS            reduce using rule 11 (expression -> expression MULT expression .)
    MINUS           reduce using rule 11 (expression -> expression MULT expression .)
    MULT            reduce using rule 11 (expression -> expression MULT expression .)
    DIVIDE          reduce using rule 11 (expression -> expression MULT expression .)
    EXP             reduce using rule 11 (expression -> expression MULT expression .)
    $end            reduce using rule 11 (expression -> expression MULT expression .)
    RPTHESES        reduce using rule 11 (expression -> expression MULT expression .)

  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! MULT            [ shift and go to state 31 ]
  ! DIVIDE          [ shift and go to state 32 ]
  ! EXP             [ shift and go to state 33 ]


state 40

    (12) expression -> expression DIVIDE expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . MULT expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . EXP expression

    PLUS            reduce using rule 12 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 12 (expression -> expression DIVIDE expression .)
    MULT            reduce using rule 12 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 12 (expression -> expression DIVIDE expression .)
    EXP             reduce using rule 12 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 12 (expression -> expression DIVIDE expression .)
    RPTHESES        reduce using rule 12 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 30 ]
  ! MULT            [ shift and go to state 31 ]
  ! DIVIDE          [ shift and go to state 32 ]
  ! EXP             [ shift and go to state 33 ]


state 41

    (13) expression -> expression EXP expression .
    (9) expression -> expression . PLUS expression
    (10) expression -> expression . MINUS expression
    (11) expression -> expression . MULT expression
    (12) expression -> expression . DIVIDE expression
    (13) expression -> expression . EXP expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
    $end            reduce using rule 13 (expression -> expression EXP expression .)
    RPTHESES        reduce using rule 13 (expression -> expression EXP expression .)
    PLUS            shift and go to state 29
    MINUS           shift and go to state 30
    MULT            shift and go to state 31
    DIVIDE          shift and go to state 32
    EXP             shift and go to state 33

  ! PLUS            [ reduce using rule 13 (expression -> expression EXP expression .) ]
  ! MINUS           [ reduce using rule 13 (expression -> expression EXP expression .) ]
  ! MULT            [ reduce using rule 13 (expression -> expression EXP expression .) ]
  ! DIVIDE          [ reduce using rule 13 (expression -> expression EXP expression .) ]
  ! EXP             [ reduce using rule 13 (expression -> expression EXP expression .) ]


state 42

    (15) expression -> LPTHESES expression RPTHESES .

    PLUS            reduce using rule 15 (expression -> LPTHESES expression RPTHESES .)
    MINUS           reduce using rule 15 (expression -> LPTHESES expression RPTHESES .)
    MULT            reduce using rule 15 (expression -> LPTHESES expression RPTHESES .)
    DIVIDE          reduce using rule 15 (expression -> LPTHESES expression RPTHESES .)
    EXP             reduce using rule 15 (expression -> LPTHESES expression RPTHESES .)
    $end            reduce using rule 15 (expression -> LPTHESES expression RPTHESES .)
    RPTHESES        reduce using rule 15 (expression -> LPTHESES expression RPTHESES .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 41 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 41 resolved as shift
WARNING: shift/reduce conflict for MULT in state 41 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 41 resolved as shift
WARNING: shift/reduce conflict for EXP in state 41 resolved as shift
