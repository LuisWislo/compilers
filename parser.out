Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    OR

Grammar

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     program -> block
Rule 3     program -> while
Rule 4     program -> for
Rule 5     program -> <empty>
Rule 6     statement -> INT ID is_assing
Rule 7     statement -> FLOAT ID is_assing
Rule 8     statement -> STRING ID is_assing
Rule 9     statement -> BOOLEAN ID is_assing
Rule 10    block -> ifblock
Rule 11    ifblock -> IF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont
Rule 12    ifcont -> elifblock ifcont
Rule 13    ifcont -> elseblock
Rule 14    ifcont -> <empty>
Rule 15    elseblock -> ELSE LCURLY program RCURLY
Rule 16    elifblock -> ELIF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont
Rule 17    while -> WHILE LPTHESES condition RPTHESES LCURLY program RCURLY
Rule 18    for -> FOR LPTHESES statement COLON condition COLON expression RPTHESES LCURLY program RCURLY
Rule 19    condition -> BOOLVAL
Rule 20    condition -> comparison
Rule 21    comparison -> expression EQUAL expression
Rule 22    comparison -> expression NOTEQUAL expression
Rule 23    comparison -> expression GTHAN expression
Rule 24    comparison -> expression LTHAN expression
Rule 25    comparison -> expression GEQTHAN expression
Rule 26    comparison -> expression LEQTHAN expression
Rule 27    is_assing -> ASSIGN expression
Rule 28    is_assing -> <empty>
Rule 29    statement -> PRINT LPTHESES expression RPTHESES
Rule 30    statement -> ID ASSIGN expression
Rule 31    expression -> expression PLUS expression
Rule 32    expression -> expression MINUS expression
Rule 33    expression -> expression MULT expression
Rule 34    expression -> expression DIVIDE expression
Rule 35    expression -> expression EXP expression
Rule 36    expression -> MINUS expression
Rule 37    expression -> LPTHESES expression RPTHESES
Rule 38    expression -> INUM
Rule 39    expression -> FNUM
Rule 40    expression -> BOOLVAL
Rule 41    expression -> STRVAL
Rule 42    expression -> ID

Terminals, with rules where they appear

AND                  : 
ASSIGN               : 27 30
BOOLEAN              : 9
BOOLVAL              : 19 40
COLON                : 18 18
DIVIDE               : 34
ELIF                 : 16
ELSE                 : 15
EQUAL                : 21
EXP                  : 35
FLOAT                : 7
FNUM                 : 39
FOR                  : 18
GEQTHAN              : 25
GTHAN                : 23
ID                   : 6 7 8 9 30 42
IF                   : 11
INT                  : 6
INUM                 : 38
LCURLY               : 11 15 16 17 18
LEQTHAN              : 26
LPTHESES             : 11 16 17 18 29 37
LTHAN                : 24
MINUS                : 32 36
MULT                 : 33
NOTEQUAL             : 22
OR                   : 
PLUS                 : 31
PRINT                : 29
RCURLY               : 11 15 16 17 18
RPTHESES             : 11 16 17 18 29 37
STRING               : 8
STRVAL               : 41
WHILE                : 17
error                : 

Nonterminals, with rules where they appear

block                : 2
comparison           : 20
condition            : 11 16 17 18
elifblock            : 12
elseblock            : 13
expression           : 18 21 21 22 22 23 23 24 24 25 25 26 26 27 29 30 31 31 32 32 33 33 34 34 35 35 36 37
for                  : 4
ifblock              : 10
ifcont               : 11 12 16
is_assing            : 6 7 8 9
program              : 11 15 16 17 18 0
statement            : 1 18
while                : 3

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) program -> . block
    (3) program -> . while
    (4) program -> . for
    (5) program -> .
    (6) statement -> . INT ID is_assing
    (7) statement -> . FLOAT ID is_assing
    (8) statement -> . STRING ID is_assing
    (9) statement -> . BOOLEAN ID is_assing
    (29) statement -> . PRINT LPTHESES expression RPTHESES
    (30) statement -> . ID ASSIGN expression
    (10) block -> . ifblock
    (17) while -> . WHILE LPTHESES condition RPTHESES LCURLY program RCURLY
    (18) for -> . FOR LPTHESES statement COLON condition COLON expression RPTHESES LCURLY program RCURLY
    (11) ifblock -> . IF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont

    $end            reduce using rule 5 (program -> .)
    INT             shift and go to state 6
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    BOOLEAN         shift and go to state 10
    PRINT           shift and go to state 11
    ID              shift and go to state 7
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    IF              shift and go to state 15

    program                        shift and go to state 1
    statement                      shift and go to state 2
    block                          shift and go to state 3
    while                          shift and go to state 4
    for                            shift and go to state 5
    ifblock                        shift and go to state 12

state 1

    (0) S' -> program .



state 2

    (1) program -> statement .

    $end            reduce using rule 1 (program -> statement .)
    RCURLY          reduce using rule 1 (program -> statement .)


state 3

    (2) program -> block .

    $end            reduce using rule 2 (program -> block .)
    RCURLY          reduce using rule 2 (program -> block .)


state 4

    (3) program -> while .

    $end            reduce using rule 3 (program -> while .)
    RCURLY          reduce using rule 3 (program -> while .)


state 5

    (4) program -> for .

    $end            reduce using rule 4 (program -> for .)
    RCURLY          reduce using rule 4 (program -> for .)


state 6

    (6) statement -> INT . ID is_assing

    ID              shift and go to state 16


state 7

    (30) statement -> ID . ASSIGN expression

    ASSIGN          shift and go to state 17


state 8

    (7) statement -> FLOAT . ID is_assing

    ID              shift and go to state 18


state 9

    (8) statement -> STRING . ID is_assing

    ID              shift and go to state 19


state 10

    (9) statement -> BOOLEAN . ID is_assing

    ID              shift and go to state 20


state 11

    (29) statement -> PRINT . LPTHESES expression RPTHESES

    LPTHESES        shift and go to state 21


state 12

    (10) block -> ifblock .

    $end            reduce using rule 10 (block -> ifblock .)
    RCURLY          reduce using rule 10 (block -> ifblock .)


state 13

    (17) while -> WHILE . LPTHESES condition RPTHESES LCURLY program RCURLY

    LPTHESES        shift and go to state 22


state 14

    (18) for -> FOR . LPTHESES statement COLON condition COLON expression RPTHESES LCURLY program RCURLY

    LPTHESES        shift and go to state 23


state 15

    (11) ifblock -> IF . LPTHESES condition RPTHESES LCURLY program RCURLY ifcont

    LPTHESES        shift and go to state 24


state 16

    (6) statement -> INT ID . is_assing
    (27) is_assing -> . ASSIGN expression
    (28) is_assing -> .

    ASSIGN          shift and go to state 26
    $end            reduce using rule 28 (is_assing -> .)
    COLON           reduce using rule 28 (is_assing -> .)
    RCURLY          reduce using rule 28 (is_assing -> .)

    is_assing                      shift and go to state 25

state 17

    (30) statement -> ID ASSIGN . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . expression EXP expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPTHESES expression RPTHESES
    (38) expression -> . INUM
    (39) expression -> . FNUM
    (40) expression -> . BOOLVAL
    (41) expression -> . STRVAL
    (42) expression -> . ID

    MINUS           shift and go to state 29
    LPTHESES        shift and go to state 30
    INUM            shift and go to state 31
    FNUM            shift and go to state 32
    BOOLVAL         shift and go to state 33
    STRVAL          shift and go to state 34
    ID              shift and go to state 27

    expression                     shift and go to state 28

state 18

    (7) statement -> FLOAT ID . is_assing
    (27) is_assing -> . ASSIGN expression
    (28) is_assing -> .

    ASSIGN          shift and go to state 26
    $end            reduce using rule 28 (is_assing -> .)
    COLON           reduce using rule 28 (is_assing -> .)
    RCURLY          reduce using rule 28 (is_assing -> .)

    is_assing                      shift and go to state 35

state 19

    (8) statement -> STRING ID . is_assing
    (27) is_assing -> . ASSIGN expression
    (28) is_assing -> .

    ASSIGN          shift and go to state 26
    $end            reduce using rule 28 (is_assing -> .)
    COLON           reduce using rule 28 (is_assing -> .)
    RCURLY          reduce using rule 28 (is_assing -> .)

    is_assing                      shift and go to state 36

state 20

    (9) statement -> BOOLEAN ID . is_assing
    (27) is_assing -> . ASSIGN expression
    (28) is_assing -> .

    ASSIGN          shift and go to state 26
    $end            reduce using rule 28 (is_assing -> .)
    COLON           reduce using rule 28 (is_assing -> .)
    RCURLY          reduce using rule 28 (is_assing -> .)

    is_assing                      shift and go to state 37

state 21

    (29) statement -> PRINT LPTHESES . expression RPTHESES
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . expression EXP expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPTHESES expression RPTHESES
    (38) expression -> . INUM
    (39) expression -> . FNUM
    (40) expression -> . BOOLVAL
    (41) expression -> . STRVAL
    (42) expression -> . ID

    MINUS           shift and go to state 29
    LPTHESES        shift and go to state 30
    INUM            shift and go to state 31
    FNUM            shift and go to state 32
    BOOLVAL         shift and go to state 33
    STRVAL          shift and go to state 34
    ID              shift and go to state 27

    expression                     shift and go to state 38

state 22

    (17) while -> WHILE LPTHESES . condition RPTHESES LCURLY program RCURLY
    (19) condition -> . BOOLVAL
    (20) condition -> . comparison
    (21) comparison -> . expression EQUAL expression
    (22) comparison -> . expression NOTEQUAL expression
    (23) comparison -> . expression GTHAN expression
    (24) comparison -> . expression LTHAN expression
    (25) comparison -> . expression GEQTHAN expression
    (26) comparison -> . expression LEQTHAN expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . expression EXP expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPTHESES expression RPTHESES
    (38) expression -> . INUM
    (39) expression -> . FNUM
    (40) expression -> . BOOLVAL
    (41) expression -> . STRVAL
    (42) expression -> . ID

    BOOLVAL         shift and go to state 40
    MINUS           shift and go to state 29
    LPTHESES        shift and go to state 30
    INUM            shift and go to state 31
    FNUM            shift and go to state 32
    STRVAL          shift and go to state 34
    ID              shift and go to state 27

    condition                      shift and go to state 39
    comparison                     shift and go to state 41
    expression                     shift and go to state 42

state 23

    (18) for -> FOR LPTHESES . statement COLON condition COLON expression RPTHESES LCURLY program RCURLY
    (6) statement -> . INT ID is_assing
    (7) statement -> . FLOAT ID is_assing
    (8) statement -> . STRING ID is_assing
    (9) statement -> . BOOLEAN ID is_assing
    (29) statement -> . PRINT LPTHESES expression RPTHESES
    (30) statement -> . ID ASSIGN expression

    INT             shift and go to state 6
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    BOOLEAN         shift and go to state 10
    PRINT           shift and go to state 11
    ID              shift and go to state 7

    statement                      shift and go to state 43

state 24

    (11) ifblock -> IF LPTHESES . condition RPTHESES LCURLY program RCURLY ifcont
    (19) condition -> . BOOLVAL
    (20) condition -> . comparison
    (21) comparison -> . expression EQUAL expression
    (22) comparison -> . expression NOTEQUAL expression
    (23) comparison -> . expression GTHAN expression
    (24) comparison -> . expression LTHAN expression
    (25) comparison -> . expression GEQTHAN expression
    (26) comparison -> . expression LEQTHAN expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . expression EXP expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPTHESES expression RPTHESES
    (38) expression -> . INUM
    (39) expression -> . FNUM
    (40) expression -> . BOOLVAL
    (41) expression -> . STRVAL
    (42) expression -> . ID

    BOOLVAL         shift and go to state 40
    MINUS           shift and go to state 29
    LPTHESES        shift and go to state 30
    INUM            shift and go to state 31
    FNUM            shift and go to state 32
    STRVAL          shift and go to state 34
    ID              shift and go to state 27

    condition                      shift and go to state 44
    comparison                     shift and go to state 41
    expression                     shift and go to state 42

state 25

    (6) statement -> INT ID is_assing .

    $end            reduce using rule 6 (statement -> INT ID is_assing .)
    COLON           reduce using rule 6 (statement -> INT ID is_assing .)
    RCURLY          reduce using rule 6 (statement -> INT ID is_assing .)


state 26

    (27) is_assing -> ASSIGN . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . expression EXP expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPTHESES expression RPTHESES
    (38) expression -> . INUM
    (39) expression -> . FNUM
    (40) expression -> . BOOLVAL
    (41) expression -> . STRVAL
    (42) expression -> . ID

    MINUS           shift and go to state 29
    LPTHESES        shift and go to state 30
    INUM            shift and go to state 31
    FNUM            shift and go to state 32
    BOOLVAL         shift and go to state 33
    STRVAL          shift and go to state 34
    ID              shift and go to state 27

    expression                     shift and go to state 45

state 27

    (42) expression -> ID .

    PLUS            reduce using rule 42 (expression -> ID .)
    MINUS           reduce using rule 42 (expression -> ID .)
    MULT            reduce using rule 42 (expression -> ID .)
    DIVIDE          reduce using rule 42 (expression -> ID .)
    EXP             reduce using rule 42 (expression -> ID .)
    $end            reduce using rule 42 (expression -> ID .)
    COLON           reduce using rule 42 (expression -> ID .)
    RCURLY          reduce using rule 42 (expression -> ID .)
    RPTHESES        reduce using rule 42 (expression -> ID .)
    EQUAL           reduce using rule 42 (expression -> ID .)
    NOTEQUAL        reduce using rule 42 (expression -> ID .)
    GTHAN           reduce using rule 42 (expression -> ID .)
    LTHAN           reduce using rule 42 (expression -> ID .)
    GEQTHAN         reduce using rule 42 (expression -> ID .)
    LEQTHAN         reduce using rule 42 (expression -> ID .)


state 28

    (30) statement -> ID ASSIGN expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIVIDE expression
    (35) expression -> expression . EXP expression

    $end            reduce using rule 30 (statement -> ID ASSIGN expression .)
    COLON           reduce using rule 30 (statement -> ID ASSIGN expression .)
    RCURLY          reduce using rule 30 (statement -> ID ASSIGN expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULT            shift and go to state 48
    DIVIDE          shift and go to state 49
    EXP             shift and go to state 50


state 29

    (36) expression -> MINUS . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . expression EXP expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPTHESES expression RPTHESES
    (38) expression -> . INUM
    (39) expression -> . FNUM
    (40) expression -> . BOOLVAL
    (41) expression -> . STRVAL
    (42) expression -> . ID

    MINUS           shift and go to state 29
    LPTHESES        shift and go to state 30
    INUM            shift and go to state 31
    FNUM            shift and go to state 32
    BOOLVAL         shift and go to state 33
    STRVAL          shift and go to state 34
    ID              shift and go to state 27

    expression                     shift and go to state 51

state 30

    (37) expression -> LPTHESES . expression RPTHESES
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . expression EXP expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPTHESES expression RPTHESES
    (38) expression -> . INUM
    (39) expression -> . FNUM
    (40) expression -> . BOOLVAL
    (41) expression -> . STRVAL
    (42) expression -> . ID

    MINUS           shift and go to state 29
    LPTHESES        shift and go to state 30
    INUM            shift and go to state 31
    FNUM            shift and go to state 32
    BOOLVAL         shift and go to state 33
    STRVAL          shift and go to state 34
    ID              shift and go to state 27

    expression                     shift and go to state 52

state 31

    (38) expression -> INUM .

    PLUS            reduce using rule 38 (expression -> INUM .)
    MINUS           reduce using rule 38 (expression -> INUM .)
    MULT            reduce using rule 38 (expression -> INUM .)
    DIVIDE          reduce using rule 38 (expression -> INUM .)
    EXP             reduce using rule 38 (expression -> INUM .)
    $end            reduce using rule 38 (expression -> INUM .)
    COLON           reduce using rule 38 (expression -> INUM .)
    RCURLY          reduce using rule 38 (expression -> INUM .)
    RPTHESES        reduce using rule 38 (expression -> INUM .)
    EQUAL           reduce using rule 38 (expression -> INUM .)
    NOTEQUAL        reduce using rule 38 (expression -> INUM .)
    GTHAN           reduce using rule 38 (expression -> INUM .)
    LTHAN           reduce using rule 38 (expression -> INUM .)
    GEQTHAN         reduce using rule 38 (expression -> INUM .)
    LEQTHAN         reduce using rule 38 (expression -> INUM .)


state 32

    (39) expression -> FNUM .

    PLUS            reduce using rule 39 (expression -> FNUM .)
    MINUS           reduce using rule 39 (expression -> FNUM .)
    MULT            reduce using rule 39 (expression -> FNUM .)
    DIVIDE          reduce using rule 39 (expression -> FNUM .)
    EXP             reduce using rule 39 (expression -> FNUM .)
    $end            reduce using rule 39 (expression -> FNUM .)
    COLON           reduce using rule 39 (expression -> FNUM .)
    RCURLY          reduce using rule 39 (expression -> FNUM .)
    RPTHESES        reduce using rule 39 (expression -> FNUM .)
    EQUAL           reduce using rule 39 (expression -> FNUM .)
    NOTEQUAL        reduce using rule 39 (expression -> FNUM .)
    GTHAN           reduce using rule 39 (expression -> FNUM .)
    LTHAN           reduce using rule 39 (expression -> FNUM .)
    GEQTHAN         reduce using rule 39 (expression -> FNUM .)
    LEQTHAN         reduce using rule 39 (expression -> FNUM .)


state 33

    (40) expression -> BOOLVAL .

    PLUS            reduce using rule 40 (expression -> BOOLVAL .)
    MINUS           reduce using rule 40 (expression -> BOOLVAL .)
    MULT            reduce using rule 40 (expression -> BOOLVAL .)
    DIVIDE          reduce using rule 40 (expression -> BOOLVAL .)
    EXP             reduce using rule 40 (expression -> BOOLVAL .)
    $end            reduce using rule 40 (expression -> BOOLVAL .)
    COLON           reduce using rule 40 (expression -> BOOLVAL .)
    RCURLY          reduce using rule 40 (expression -> BOOLVAL .)
    RPTHESES        reduce using rule 40 (expression -> BOOLVAL .)
    EQUAL           reduce using rule 40 (expression -> BOOLVAL .)
    NOTEQUAL        reduce using rule 40 (expression -> BOOLVAL .)
    GTHAN           reduce using rule 40 (expression -> BOOLVAL .)
    LTHAN           reduce using rule 40 (expression -> BOOLVAL .)
    GEQTHAN         reduce using rule 40 (expression -> BOOLVAL .)
    LEQTHAN         reduce using rule 40 (expression -> BOOLVAL .)


state 34

    (41) expression -> STRVAL .

    PLUS            reduce using rule 41 (expression -> STRVAL .)
    MINUS           reduce using rule 41 (expression -> STRVAL .)
    MULT            reduce using rule 41 (expression -> STRVAL .)
    DIVIDE          reduce using rule 41 (expression -> STRVAL .)
    EXP             reduce using rule 41 (expression -> STRVAL .)
    $end            reduce using rule 41 (expression -> STRVAL .)
    COLON           reduce using rule 41 (expression -> STRVAL .)
    RCURLY          reduce using rule 41 (expression -> STRVAL .)
    RPTHESES        reduce using rule 41 (expression -> STRVAL .)
    EQUAL           reduce using rule 41 (expression -> STRVAL .)
    NOTEQUAL        reduce using rule 41 (expression -> STRVAL .)
    GTHAN           reduce using rule 41 (expression -> STRVAL .)
    LTHAN           reduce using rule 41 (expression -> STRVAL .)
    GEQTHAN         reduce using rule 41 (expression -> STRVAL .)
    LEQTHAN         reduce using rule 41 (expression -> STRVAL .)


state 35

    (7) statement -> FLOAT ID is_assing .

    $end            reduce using rule 7 (statement -> FLOAT ID is_assing .)
    COLON           reduce using rule 7 (statement -> FLOAT ID is_assing .)
    RCURLY          reduce using rule 7 (statement -> FLOAT ID is_assing .)


state 36

    (8) statement -> STRING ID is_assing .

    $end            reduce using rule 8 (statement -> STRING ID is_assing .)
    COLON           reduce using rule 8 (statement -> STRING ID is_assing .)
    RCURLY          reduce using rule 8 (statement -> STRING ID is_assing .)


state 37

    (9) statement -> BOOLEAN ID is_assing .

    $end            reduce using rule 9 (statement -> BOOLEAN ID is_assing .)
    COLON           reduce using rule 9 (statement -> BOOLEAN ID is_assing .)
    RCURLY          reduce using rule 9 (statement -> BOOLEAN ID is_assing .)


state 38

    (29) statement -> PRINT LPTHESES expression . RPTHESES
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIVIDE expression
    (35) expression -> expression . EXP expression

    RPTHESES        shift and go to state 53
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULT            shift and go to state 48
    DIVIDE          shift and go to state 49
    EXP             shift and go to state 50


state 39

    (17) while -> WHILE LPTHESES condition . RPTHESES LCURLY program RCURLY

    RPTHESES        shift and go to state 54


state 40

    (19) condition -> BOOLVAL .
    (40) expression -> BOOLVAL .

    RPTHESES        reduce using rule 19 (condition -> BOOLVAL .)
    COLON           reduce using rule 19 (condition -> BOOLVAL .)
    EQUAL           reduce using rule 40 (expression -> BOOLVAL .)
    NOTEQUAL        reduce using rule 40 (expression -> BOOLVAL .)
    GTHAN           reduce using rule 40 (expression -> BOOLVAL .)
    LTHAN           reduce using rule 40 (expression -> BOOLVAL .)
    GEQTHAN         reduce using rule 40 (expression -> BOOLVAL .)
    LEQTHAN         reduce using rule 40 (expression -> BOOLVAL .)
    PLUS            reduce using rule 40 (expression -> BOOLVAL .)
    MINUS           reduce using rule 40 (expression -> BOOLVAL .)
    MULT            reduce using rule 40 (expression -> BOOLVAL .)
    DIVIDE          reduce using rule 40 (expression -> BOOLVAL .)
    EXP             reduce using rule 40 (expression -> BOOLVAL .)


state 41

    (20) condition -> comparison .

    RPTHESES        reduce using rule 20 (condition -> comparison .)
    COLON           reduce using rule 20 (condition -> comparison .)


state 42

    (21) comparison -> expression . EQUAL expression
    (22) comparison -> expression . NOTEQUAL expression
    (23) comparison -> expression . GTHAN expression
    (24) comparison -> expression . LTHAN expression
    (25) comparison -> expression . GEQTHAN expression
    (26) comparison -> expression . LEQTHAN expression
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIVIDE expression
    (35) expression -> expression . EXP expression

    EQUAL           shift and go to state 55
    NOTEQUAL        shift and go to state 56
    GTHAN           shift and go to state 57
    LTHAN           shift and go to state 58
    GEQTHAN         shift and go to state 59
    LEQTHAN         shift and go to state 60
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULT            shift and go to state 48
    DIVIDE          shift and go to state 49
    EXP             shift and go to state 50


state 43

    (18) for -> FOR LPTHESES statement . COLON condition COLON expression RPTHESES LCURLY program RCURLY

    COLON           shift and go to state 61


state 44

    (11) ifblock -> IF LPTHESES condition . RPTHESES LCURLY program RCURLY ifcont

    RPTHESES        shift and go to state 62


state 45

    (27) is_assing -> ASSIGN expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIVIDE expression
    (35) expression -> expression . EXP expression

    $end            reduce using rule 27 (is_assing -> ASSIGN expression .)
    COLON           reduce using rule 27 (is_assing -> ASSIGN expression .)
    RCURLY          reduce using rule 27 (is_assing -> ASSIGN expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULT            shift and go to state 48
    DIVIDE          shift and go to state 49
    EXP             shift and go to state 50


state 46

    (31) expression -> expression PLUS . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . expression EXP expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPTHESES expression RPTHESES
    (38) expression -> . INUM
    (39) expression -> . FNUM
    (40) expression -> . BOOLVAL
    (41) expression -> . STRVAL
    (42) expression -> . ID

    MINUS           shift and go to state 29
    LPTHESES        shift and go to state 30
    INUM            shift and go to state 31
    FNUM            shift and go to state 32
    BOOLVAL         shift and go to state 33
    STRVAL          shift and go to state 34
    ID              shift and go to state 27

    expression                     shift and go to state 63

state 47

    (32) expression -> expression MINUS . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . expression EXP expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPTHESES expression RPTHESES
    (38) expression -> . INUM
    (39) expression -> . FNUM
    (40) expression -> . BOOLVAL
    (41) expression -> . STRVAL
    (42) expression -> . ID

    MINUS           shift and go to state 29
    LPTHESES        shift and go to state 30
    INUM            shift and go to state 31
    FNUM            shift and go to state 32
    BOOLVAL         shift and go to state 33
    STRVAL          shift and go to state 34
    ID              shift and go to state 27

    expression                     shift and go to state 64

state 48

    (33) expression -> expression MULT . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . expression EXP expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPTHESES expression RPTHESES
    (38) expression -> . INUM
    (39) expression -> . FNUM
    (40) expression -> . BOOLVAL
    (41) expression -> . STRVAL
    (42) expression -> . ID

    MINUS           shift and go to state 29
    LPTHESES        shift and go to state 30
    INUM            shift and go to state 31
    FNUM            shift and go to state 32
    BOOLVAL         shift and go to state 33
    STRVAL          shift and go to state 34
    ID              shift and go to state 27

    expression                     shift and go to state 65

state 49

    (34) expression -> expression DIVIDE . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . expression EXP expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPTHESES expression RPTHESES
    (38) expression -> . INUM
    (39) expression -> . FNUM
    (40) expression -> . BOOLVAL
    (41) expression -> . STRVAL
    (42) expression -> . ID

    MINUS           shift and go to state 29
    LPTHESES        shift and go to state 30
    INUM            shift and go to state 31
    FNUM            shift and go to state 32
    BOOLVAL         shift and go to state 33
    STRVAL          shift and go to state 34
    ID              shift and go to state 27

    expression                     shift and go to state 66

state 50

    (35) expression -> expression EXP . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . expression EXP expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPTHESES expression RPTHESES
    (38) expression -> . INUM
    (39) expression -> . FNUM
    (40) expression -> . BOOLVAL
    (41) expression -> . STRVAL
    (42) expression -> . ID

    MINUS           shift and go to state 29
    LPTHESES        shift and go to state 30
    INUM            shift and go to state 31
    FNUM            shift and go to state 32
    BOOLVAL         shift and go to state 33
    STRVAL          shift and go to state 34
    ID              shift and go to state 27

    expression                     shift and go to state 67

state 51

    (36) expression -> MINUS expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIVIDE expression
    (35) expression -> expression . EXP expression

    PLUS            reduce using rule 36 (expression -> MINUS expression .)
    MINUS           reduce using rule 36 (expression -> MINUS expression .)
    MULT            reduce using rule 36 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 36 (expression -> MINUS expression .)
    EXP             reduce using rule 36 (expression -> MINUS expression .)
    $end            reduce using rule 36 (expression -> MINUS expression .)
    COLON           reduce using rule 36 (expression -> MINUS expression .)
    RCURLY          reduce using rule 36 (expression -> MINUS expression .)
    RPTHESES        reduce using rule 36 (expression -> MINUS expression .)
    EQUAL           reduce using rule 36 (expression -> MINUS expression .)
    NOTEQUAL        reduce using rule 36 (expression -> MINUS expression .)
    GTHAN           reduce using rule 36 (expression -> MINUS expression .)
    LTHAN           reduce using rule 36 (expression -> MINUS expression .)
    GEQTHAN         reduce using rule 36 (expression -> MINUS expression .)
    LEQTHAN         reduce using rule 36 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! MULT            [ shift and go to state 48 ]
  ! DIVIDE          [ shift and go to state 49 ]
  ! EXP             [ shift and go to state 50 ]


state 52

    (37) expression -> LPTHESES expression . RPTHESES
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIVIDE expression
    (35) expression -> expression . EXP expression

    RPTHESES        shift and go to state 68
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULT            shift and go to state 48
    DIVIDE          shift and go to state 49
    EXP             shift and go to state 50


state 53

    (29) statement -> PRINT LPTHESES expression RPTHESES .

    $end            reduce using rule 29 (statement -> PRINT LPTHESES expression RPTHESES .)
    COLON           reduce using rule 29 (statement -> PRINT LPTHESES expression RPTHESES .)
    RCURLY          reduce using rule 29 (statement -> PRINT LPTHESES expression RPTHESES .)


state 54

    (17) while -> WHILE LPTHESES condition RPTHESES . LCURLY program RCURLY

    LCURLY          shift and go to state 69


state 55

    (21) comparison -> expression EQUAL . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . expression EXP expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPTHESES expression RPTHESES
    (38) expression -> . INUM
    (39) expression -> . FNUM
    (40) expression -> . BOOLVAL
    (41) expression -> . STRVAL
    (42) expression -> . ID

    MINUS           shift and go to state 29
    LPTHESES        shift and go to state 30
    INUM            shift and go to state 31
    FNUM            shift and go to state 32
    BOOLVAL         shift and go to state 33
    STRVAL          shift and go to state 34
    ID              shift and go to state 27

    expression                     shift and go to state 70

state 56

    (22) comparison -> expression NOTEQUAL . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . expression EXP expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPTHESES expression RPTHESES
    (38) expression -> . INUM
    (39) expression -> . FNUM
    (40) expression -> . BOOLVAL
    (41) expression -> . STRVAL
    (42) expression -> . ID

    MINUS           shift and go to state 29
    LPTHESES        shift and go to state 30
    INUM            shift and go to state 31
    FNUM            shift and go to state 32
    BOOLVAL         shift and go to state 33
    STRVAL          shift and go to state 34
    ID              shift and go to state 27

    expression                     shift and go to state 71

state 57

    (23) comparison -> expression GTHAN . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . expression EXP expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPTHESES expression RPTHESES
    (38) expression -> . INUM
    (39) expression -> . FNUM
    (40) expression -> . BOOLVAL
    (41) expression -> . STRVAL
    (42) expression -> . ID

    MINUS           shift and go to state 29
    LPTHESES        shift and go to state 30
    INUM            shift and go to state 31
    FNUM            shift and go to state 32
    BOOLVAL         shift and go to state 33
    STRVAL          shift and go to state 34
    ID              shift and go to state 27

    expression                     shift and go to state 72

state 58

    (24) comparison -> expression LTHAN . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . expression EXP expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPTHESES expression RPTHESES
    (38) expression -> . INUM
    (39) expression -> . FNUM
    (40) expression -> . BOOLVAL
    (41) expression -> . STRVAL
    (42) expression -> . ID

    MINUS           shift and go to state 29
    LPTHESES        shift and go to state 30
    INUM            shift and go to state 31
    FNUM            shift and go to state 32
    BOOLVAL         shift and go to state 33
    STRVAL          shift and go to state 34
    ID              shift and go to state 27

    expression                     shift and go to state 73

state 59

    (25) comparison -> expression GEQTHAN . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . expression EXP expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPTHESES expression RPTHESES
    (38) expression -> . INUM
    (39) expression -> . FNUM
    (40) expression -> . BOOLVAL
    (41) expression -> . STRVAL
    (42) expression -> . ID

    MINUS           shift and go to state 29
    LPTHESES        shift and go to state 30
    INUM            shift and go to state 31
    FNUM            shift and go to state 32
    BOOLVAL         shift and go to state 33
    STRVAL          shift and go to state 34
    ID              shift and go to state 27

    expression                     shift and go to state 74

state 60

    (26) comparison -> expression LEQTHAN . expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . expression EXP expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPTHESES expression RPTHESES
    (38) expression -> . INUM
    (39) expression -> . FNUM
    (40) expression -> . BOOLVAL
    (41) expression -> . STRVAL
    (42) expression -> . ID

    MINUS           shift and go to state 29
    LPTHESES        shift and go to state 30
    INUM            shift and go to state 31
    FNUM            shift and go to state 32
    BOOLVAL         shift and go to state 33
    STRVAL          shift and go to state 34
    ID              shift and go to state 27

    expression                     shift and go to state 75

state 61

    (18) for -> FOR LPTHESES statement COLON . condition COLON expression RPTHESES LCURLY program RCURLY
    (19) condition -> . BOOLVAL
    (20) condition -> . comparison
    (21) comparison -> . expression EQUAL expression
    (22) comparison -> . expression NOTEQUAL expression
    (23) comparison -> . expression GTHAN expression
    (24) comparison -> . expression LTHAN expression
    (25) comparison -> . expression GEQTHAN expression
    (26) comparison -> . expression LEQTHAN expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . expression EXP expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPTHESES expression RPTHESES
    (38) expression -> . INUM
    (39) expression -> . FNUM
    (40) expression -> . BOOLVAL
    (41) expression -> . STRVAL
    (42) expression -> . ID

    BOOLVAL         shift and go to state 40
    MINUS           shift and go to state 29
    LPTHESES        shift and go to state 30
    INUM            shift and go to state 31
    FNUM            shift and go to state 32
    STRVAL          shift and go to state 34
    ID              shift and go to state 27

    condition                      shift and go to state 76
    expression                     shift and go to state 42
    comparison                     shift and go to state 41

state 62

    (11) ifblock -> IF LPTHESES condition RPTHESES . LCURLY program RCURLY ifcont

    LCURLY          shift and go to state 77


state 63

    (31) expression -> expression PLUS expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIVIDE expression
    (35) expression -> expression . EXP expression

    PLUS            reduce using rule 31 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 31 (expression -> expression PLUS expression .)
    EXP             reduce using rule 31 (expression -> expression PLUS expression .)
    $end            reduce using rule 31 (expression -> expression PLUS expression .)
    COLON           reduce using rule 31 (expression -> expression PLUS expression .)
    RCURLY          reduce using rule 31 (expression -> expression PLUS expression .)
    RPTHESES        reduce using rule 31 (expression -> expression PLUS expression .)
    EQUAL           reduce using rule 31 (expression -> expression PLUS expression .)
    NOTEQUAL        reduce using rule 31 (expression -> expression PLUS expression .)
    GTHAN           reduce using rule 31 (expression -> expression PLUS expression .)
    LTHAN           reduce using rule 31 (expression -> expression PLUS expression .)
    GEQTHAN         reduce using rule 31 (expression -> expression PLUS expression .)
    LEQTHAN         reduce using rule 31 (expression -> expression PLUS expression .)
    MULT            shift and go to state 48
    DIVIDE          shift and go to state 49

  ! MULT            [ reduce using rule 31 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! EXP             [ shift and go to state 50 ]


state 64

    (32) expression -> expression MINUS expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIVIDE expression
    (35) expression -> expression . EXP expression

    PLUS            reduce using rule 32 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 32 (expression -> expression MINUS expression .)
    EXP             reduce using rule 32 (expression -> expression MINUS expression .)
    $end            reduce using rule 32 (expression -> expression MINUS expression .)
    COLON           reduce using rule 32 (expression -> expression MINUS expression .)
    RCURLY          reduce using rule 32 (expression -> expression MINUS expression .)
    RPTHESES        reduce using rule 32 (expression -> expression MINUS expression .)
    EQUAL           reduce using rule 32 (expression -> expression MINUS expression .)
    NOTEQUAL        reduce using rule 32 (expression -> expression MINUS expression .)
    GTHAN           reduce using rule 32 (expression -> expression MINUS expression .)
    LTHAN           reduce using rule 32 (expression -> expression MINUS expression .)
    GEQTHAN         reduce using rule 32 (expression -> expression MINUS expression .)
    LEQTHAN         reduce using rule 32 (expression -> expression MINUS expression .)
    MULT            shift and go to state 48
    DIVIDE          shift and go to state 49

  ! MULT            [ reduce using rule 32 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! EXP             [ shift and go to state 50 ]


state 65

    (33) expression -> expression MULT expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIVIDE expression
    (35) expression -> expression . EXP expression

    PLUS            reduce using rule 33 (expression -> expression MULT expression .)
    MINUS           reduce using rule 33 (expression -> expression MULT expression .)
    MULT            reduce using rule 33 (expression -> expression MULT expression .)
    DIVIDE          reduce using rule 33 (expression -> expression MULT expression .)
    EXP             reduce using rule 33 (expression -> expression MULT expression .)
    $end            reduce using rule 33 (expression -> expression MULT expression .)
    COLON           reduce using rule 33 (expression -> expression MULT expression .)
    RCURLY          reduce using rule 33 (expression -> expression MULT expression .)
    RPTHESES        reduce using rule 33 (expression -> expression MULT expression .)
    EQUAL           reduce using rule 33 (expression -> expression MULT expression .)
    NOTEQUAL        reduce using rule 33 (expression -> expression MULT expression .)
    GTHAN           reduce using rule 33 (expression -> expression MULT expression .)
    LTHAN           reduce using rule 33 (expression -> expression MULT expression .)
    GEQTHAN         reduce using rule 33 (expression -> expression MULT expression .)
    LEQTHAN         reduce using rule 33 (expression -> expression MULT expression .)

  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! MULT            [ shift and go to state 48 ]
  ! DIVIDE          [ shift and go to state 49 ]
  ! EXP             [ shift and go to state 50 ]


state 66

    (34) expression -> expression DIVIDE expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIVIDE expression
    (35) expression -> expression . EXP expression

    PLUS            reduce using rule 34 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 34 (expression -> expression DIVIDE expression .)
    MULT            reduce using rule 34 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 34 (expression -> expression DIVIDE expression .)
    EXP             reduce using rule 34 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 34 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 34 (expression -> expression DIVIDE expression .)
    RCURLY          reduce using rule 34 (expression -> expression DIVIDE expression .)
    RPTHESES        reduce using rule 34 (expression -> expression DIVIDE expression .)
    EQUAL           reduce using rule 34 (expression -> expression DIVIDE expression .)
    NOTEQUAL        reduce using rule 34 (expression -> expression DIVIDE expression .)
    GTHAN           reduce using rule 34 (expression -> expression DIVIDE expression .)
    LTHAN           reduce using rule 34 (expression -> expression DIVIDE expression .)
    GEQTHAN         reduce using rule 34 (expression -> expression DIVIDE expression .)
    LEQTHAN         reduce using rule 34 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 47 ]
  ! MULT            [ shift and go to state 48 ]
  ! DIVIDE          [ shift and go to state 49 ]
  ! EXP             [ shift and go to state 50 ]


state 67

    (35) expression -> expression EXP expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIVIDE expression
    (35) expression -> expression . EXP expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for EXP resolved as shift
    $end            reduce using rule 35 (expression -> expression EXP expression .)
    COLON           reduce using rule 35 (expression -> expression EXP expression .)
    RCURLY          reduce using rule 35 (expression -> expression EXP expression .)
    RPTHESES        reduce using rule 35 (expression -> expression EXP expression .)
    EQUAL           reduce using rule 35 (expression -> expression EXP expression .)
    NOTEQUAL        reduce using rule 35 (expression -> expression EXP expression .)
    GTHAN           reduce using rule 35 (expression -> expression EXP expression .)
    LTHAN           reduce using rule 35 (expression -> expression EXP expression .)
    GEQTHAN         reduce using rule 35 (expression -> expression EXP expression .)
    LEQTHAN         reduce using rule 35 (expression -> expression EXP expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULT            shift and go to state 48
    DIVIDE          shift and go to state 49
    EXP             shift and go to state 50

  ! PLUS            [ reduce using rule 35 (expression -> expression EXP expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression EXP expression .) ]
  ! MULT            [ reduce using rule 35 (expression -> expression EXP expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression EXP expression .) ]
  ! EXP             [ reduce using rule 35 (expression -> expression EXP expression .) ]


state 68

    (37) expression -> LPTHESES expression RPTHESES .

    PLUS            reduce using rule 37 (expression -> LPTHESES expression RPTHESES .)
    MINUS           reduce using rule 37 (expression -> LPTHESES expression RPTHESES .)
    MULT            reduce using rule 37 (expression -> LPTHESES expression RPTHESES .)
    DIVIDE          reduce using rule 37 (expression -> LPTHESES expression RPTHESES .)
    EXP             reduce using rule 37 (expression -> LPTHESES expression RPTHESES .)
    $end            reduce using rule 37 (expression -> LPTHESES expression RPTHESES .)
    COLON           reduce using rule 37 (expression -> LPTHESES expression RPTHESES .)
    RCURLY          reduce using rule 37 (expression -> LPTHESES expression RPTHESES .)
    RPTHESES        reduce using rule 37 (expression -> LPTHESES expression RPTHESES .)
    EQUAL           reduce using rule 37 (expression -> LPTHESES expression RPTHESES .)
    NOTEQUAL        reduce using rule 37 (expression -> LPTHESES expression RPTHESES .)
    GTHAN           reduce using rule 37 (expression -> LPTHESES expression RPTHESES .)
    LTHAN           reduce using rule 37 (expression -> LPTHESES expression RPTHESES .)
    GEQTHAN         reduce using rule 37 (expression -> LPTHESES expression RPTHESES .)
    LEQTHAN         reduce using rule 37 (expression -> LPTHESES expression RPTHESES .)


state 69

    (17) while -> WHILE LPTHESES condition RPTHESES LCURLY . program RCURLY
    (1) program -> . statement
    (2) program -> . block
    (3) program -> . while
    (4) program -> . for
    (5) program -> .
    (6) statement -> . INT ID is_assing
    (7) statement -> . FLOAT ID is_assing
    (8) statement -> . STRING ID is_assing
    (9) statement -> . BOOLEAN ID is_assing
    (29) statement -> . PRINT LPTHESES expression RPTHESES
    (30) statement -> . ID ASSIGN expression
    (10) block -> . ifblock
    (17) while -> . WHILE LPTHESES condition RPTHESES LCURLY program RCURLY
    (18) for -> . FOR LPTHESES statement COLON condition COLON expression RPTHESES LCURLY program RCURLY
    (11) ifblock -> . IF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont

    RCURLY          reduce using rule 5 (program -> .)
    INT             shift and go to state 6
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    BOOLEAN         shift and go to state 10
    PRINT           shift and go to state 11
    ID              shift and go to state 7
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    IF              shift and go to state 15

    program                        shift and go to state 78
    statement                      shift and go to state 2
    block                          shift and go to state 3
    while                          shift and go to state 4
    for                            shift and go to state 5
    ifblock                        shift and go to state 12

state 70

    (21) comparison -> expression EQUAL expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIVIDE expression
    (35) expression -> expression . EXP expression

    RPTHESES        reduce using rule 21 (comparison -> expression EQUAL expression .)
    COLON           reduce using rule 21 (comparison -> expression EQUAL expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULT            shift and go to state 48
    DIVIDE          shift and go to state 49
    EXP             shift and go to state 50


state 71

    (22) comparison -> expression NOTEQUAL expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIVIDE expression
    (35) expression -> expression . EXP expression

    RPTHESES        reduce using rule 22 (comparison -> expression NOTEQUAL expression .)
    COLON           reduce using rule 22 (comparison -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULT            shift and go to state 48
    DIVIDE          shift and go to state 49
    EXP             shift and go to state 50


state 72

    (23) comparison -> expression GTHAN expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIVIDE expression
    (35) expression -> expression . EXP expression

    RPTHESES        reduce using rule 23 (comparison -> expression GTHAN expression .)
    COLON           reduce using rule 23 (comparison -> expression GTHAN expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULT            shift and go to state 48
    DIVIDE          shift and go to state 49
    EXP             shift and go to state 50


state 73

    (24) comparison -> expression LTHAN expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIVIDE expression
    (35) expression -> expression . EXP expression

    RPTHESES        reduce using rule 24 (comparison -> expression LTHAN expression .)
    COLON           reduce using rule 24 (comparison -> expression LTHAN expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULT            shift and go to state 48
    DIVIDE          shift and go to state 49
    EXP             shift and go to state 50


state 74

    (25) comparison -> expression GEQTHAN expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIVIDE expression
    (35) expression -> expression . EXP expression

    RPTHESES        reduce using rule 25 (comparison -> expression GEQTHAN expression .)
    COLON           reduce using rule 25 (comparison -> expression GEQTHAN expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULT            shift and go to state 48
    DIVIDE          shift and go to state 49
    EXP             shift and go to state 50


state 75

    (26) comparison -> expression LEQTHAN expression .
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIVIDE expression
    (35) expression -> expression . EXP expression

    RPTHESES        reduce using rule 26 (comparison -> expression LEQTHAN expression .)
    COLON           reduce using rule 26 (comparison -> expression LEQTHAN expression .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULT            shift and go to state 48
    DIVIDE          shift and go to state 49
    EXP             shift and go to state 50


state 76

    (18) for -> FOR LPTHESES statement COLON condition . COLON expression RPTHESES LCURLY program RCURLY

    COLON           shift and go to state 79


state 77

    (11) ifblock -> IF LPTHESES condition RPTHESES LCURLY . program RCURLY ifcont
    (1) program -> . statement
    (2) program -> . block
    (3) program -> . while
    (4) program -> . for
    (5) program -> .
    (6) statement -> . INT ID is_assing
    (7) statement -> . FLOAT ID is_assing
    (8) statement -> . STRING ID is_assing
    (9) statement -> . BOOLEAN ID is_assing
    (29) statement -> . PRINT LPTHESES expression RPTHESES
    (30) statement -> . ID ASSIGN expression
    (10) block -> . ifblock
    (17) while -> . WHILE LPTHESES condition RPTHESES LCURLY program RCURLY
    (18) for -> . FOR LPTHESES statement COLON condition COLON expression RPTHESES LCURLY program RCURLY
    (11) ifblock -> . IF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont

    RCURLY          reduce using rule 5 (program -> .)
    INT             shift and go to state 6
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    BOOLEAN         shift and go to state 10
    PRINT           shift and go to state 11
    ID              shift and go to state 7
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    IF              shift and go to state 15

    program                        shift and go to state 80
    statement                      shift and go to state 2
    block                          shift and go to state 3
    while                          shift and go to state 4
    for                            shift and go to state 5
    ifblock                        shift and go to state 12

state 78

    (17) while -> WHILE LPTHESES condition RPTHESES LCURLY program . RCURLY

    RCURLY          shift and go to state 81


state 79

    (18) for -> FOR LPTHESES statement COLON condition COLON . expression RPTHESES LCURLY program RCURLY
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . expression EXP expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPTHESES expression RPTHESES
    (38) expression -> . INUM
    (39) expression -> . FNUM
    (40) expression -> . BOOLVAL
    (41) expression -> . STRVAL
    (42) expression -> . ID

    MINUS           shift and go to state 29
    LPTHESES        shift and go to state 30
    INUM            shift and go to state 31
    FNUM            shift and go to state 32
    BOOLVAL         shift and go to state 33
    STRVAL          shift and go to state 34
    ID              shift and go to state 27

    expression                     shift and go to state 82

state 80

    (11) ifblock -> IF LPTHESES condition RPTHESES LCURLY program . RCURLY ifcont

    RCURLY          shift and go to state 83


state 81

    (17) while -> WHILE LPTHESES condition RPTHESES LCURLY program RCURLY .

    $end            reduce using rule 17 (while -> WHILE LPTHESES condition RPTHESES LCURLY program RCURLY .)
    RCURLY          reduce using rule 17 (while -> WHILE LPTHESES condition RPTHESES LCURLY program RCURLY .)


state 82

    (18) for -> FOR LPTHESES statement COLON condition COLON expression . RPTHESES LCURLY program RCURLY
    (31) expression -> expression . PLUS expression
    (32) expression -> expression . MINUS expression
    (33) expression -> expression . MULT expression
    (34) expression -> expression . DIVIDE expression
    (35) expression -> expression . EXP expression

    RPTHESES        shift and go to state 84
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    MULT            shift and go to state 48
    DIVIDE          shift and go to state 49
    EXP             shift and go to state 50


state 83

    (11) ifblock -> IF LPTHESES condition RPTHESES LCURLY program RCURLY . ifcont
    (12) ifcont -> . elifblock ifcont
    (13) ifcont -> . elseblock
    (14) ifcont -> .
    (16) elifblock -> . ELIF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont
    (15) elseblock -> . ELSE LCURLY program RCURLY

    $end            reduce using rule 14 (ifcont -> .)
    RCURLY          reduce using rule 14 (ifcont -> .)
    ELIF            shift and go to state 88
    ELSE            shift and go to state 89

    ifcont                         shift and go to state 85
    elifblock                      shift and go to state 86
    elseblock                      shift and go to state 87

state 84

    (18) for -> FOR LPTHESES statement COLON condition COLON expression RPTHESES . LCURLY program RCURLY

    LCURLY          shift and go to state 90


state 85

    (11) ifblock -> IF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont .

    $end            reduce using rule 11 (ifblock -> IF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont .)
    RCURLY          reduce using rule 11 (ifblock -> IF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont .)


state 86

    (12) ifcont -> elifblock . ifcont
    (12) ifcont -> . elifblock ifcont
    (13) ifcont -> . elseblock
    (14) ifcont -> .
    (16) elifblock -> . ELIF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont
    (15) elseblock -> . ELSE LCURLY program RCURLY

  ! shift/reduce conflict for ELIF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    $end            reduce using rule 14 (ifcont -> .)
    RCURLY          reduce using rule 14 (ifcont -> .)
    ELIF            shift and go to state 88
    ELSE            shift and go to state 89

  ! ELIF            [ reduce using rule 14 (ifcont -> .) ]
  ! ELSE            [ reduce using rule 14 (ifcont -> .) ]

    elifblock                      shift and go to state 86
    ifcont                         shift and go to state 91
    elseblock                      shift and go to state 87

state 87

    (13) ifcont -> elseblock .

    $end            reduce using rule 13 (ifcont -> elseblock .)
    RCURLY          reduce using rule 13 (ifcont -> elseblock .)
    ELIF            reduce using rule 13 (ifcont -> elseblock .)
    ELSE            reduce using rule 13 (ifcont -> elseblock .)


state 88

    (16) elifblock -> ELIF . LPTHESES condition RPTHESES LCURLY program RCURLY ifcont

    LPTHESES        shift and go to state 92


state 89

    (15) elseblock -> ELSE . LCURLY program RCURLY

    LCURLY          shift and go to state 93


state 90

    (18) for -> FOR LPTHESES statement COLON condition COLON expression RPTHESES LCURLY . program RCURLY
    (1) program -> . statement
    (2) program -> . block
    (3) program -> . while
    (4) program -> . for
    (5) program -> .
    (6) statement -> . INT ID is_assing
    (7) statement -> . FLOAT ID is_assing
    (8) statement -> . STRING ID is_assing
    (9) statement -> . BOOLEAN ID is_assing
    (29) statement -> . PRINT LPTHESES expression RPTHESES
    (30) statement -> . ID ASSIGN expression
    (10) block -> . ifblock
    (17) while -> . WHILE LPTHESES condition RPTHESES LCURLY program RCURLY
    (18) for -> . FOR LPTHESES statement COLON condition COLON expression RPTHESES LCURLY program RCURLY
    (11) ifblock -> . IF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont

    RCURLY          reduce using rule 5 (program -> .)
    INT             shift and go to state 6
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    BOOLEAN         shift and go to state 10
    PRINT           shift and go to state 11
    ID              shift and go to state 7
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    IF              shift and go to state 15

    statement                      shift and go to state 2
    program                        shift and go to state 94
    block                          shift and go to state 3
    while                          shift and go to state 4
    for                            shift and go to state 5
    ifblock                        shift and go to state 12

state 91

    (12) ifcont -> elifblock ifcont .

    $end            reduce using rule 12 (ifcont -> elifblock ifcont .)
    RCURLY          reduce using rule 12 (ifcont -> elifblock ifcont .)
    ELIF            reduce using rule 12 (ifcont -> elifblock ifcont .)
    ELSE            reduce using rule 12 (ifcont -> elifblock ifcont .)


state 92

    (16) elifblock -> ELIF LPTHESES . condition RPTHESES LCURLY program RCURLY ifcont
    (19) condition -> . BOOLVAL
    (20) condition -> . comparison
    (21) comparison -> . expression EQUAL expression
    (22) comparison -> . expression NOTEQUAL expression
    (23) comparison -> . expression GTHAN expression
    (24) comparison -> . expression LTHAN expression
    (25) comparison -> . expression GEQTHAN expression
    (26) comparison -> . expression LEQTHAN expression
    (31) expression -> . expression PLUS expression
    (32) expression -> . expression MINUS expression
    (33) expression -> . expression MULT expression
    (34) expression -> . expression DIVIDE expression
    (35) expression -> . expression EXP expression
    (36) expression -> . MINUS expression
    (37) expression -> . LPTHESES expression RPTHESES
    (38) expression -> . INUM
    (39) expression -> . FNUM
    (40) expression -> . BOOLVAL
    (41) expression -> . STRVAL
    (42) expression -> . ID

    BOOLVAL         shift and go to state 40
    MINUS           shift and go to state 29
    LPTHESES        shift and go to state 30
    INUM            shift and go to state 31
    FNUM            shift and go to state 32
    STRVAL          shift and go to state 34
    ID              shift and go to state 27

    condition                      shift and go to state 95
    comparison                     shift and go to state 41
    expression                     shift and go to state 42

state 93

    (15) elseblock -> ELSE LCURLY . program RCURLY
    (1) program -> . statement
    (2) program -> . block
    (3) program -> . while
    (4) program -> . for
    (5) program -> .
    (6) statement -> . INT ID is_assing
    (7) statement -> . FLOAT ID is_assing
    (8) statement -> . STRING ID is_assing
    (9) statement -> . BOOLEAN ID is_assing
    (29) statement -> . PRINT LPTHESES expression RPTHESES
    (30) statement -> . ID ASSIGN expression
    (10) block -> . ifblock
    (17) while -> . WHILE LPTHESES condition RPTHESES LCURLY program RCURLY
    (18) for -> . FOR LPTHESES statement COLON condition COLON expression RPTHESES LCURLY program RCURLY
    (11) ifblock -> . IF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont

    RCURLY          reduce using rule 5 (program -> .)
    INT             shift and go to state 6
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    BOOLEAN         shift and go to state 10
    PRINT           shift and go to state 11
    ID              shift and go to state 7
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    IF              shift and go to state 15

    program                        shift and go to state 96
    statement                      shift and go to state 2
    block                          shift and go to state 3
    while                          shift and go to state 4
    for                            shift and go to state 5
    ifblock                        shift and go to state 12

state 94

    (18) for -> FOR LPTHESES statement COLON condition COLON expression RPTHESES LCURLY program . RCURLY

    RCURLY          shift and go to state 97


state 95

    (16) elifblock -> ELIF LPTHESES condition . RPTHESES LCURLY program RCURLY ifcont

    RPTHESES        shift and go to state 98


state 96

    (15) elseblock -> ELSE LCURLY program . RCURLY

    RCURLY          shift and go to state 99


state 97

    (18) for -> FOR LPTHESES statement COLON condition COLON expression RPTHESES LCURLY program RCURLY .

    $end            reduce using rule 18 (for -> FOR LPTHESES statement COLON condition COLON expression RPTHESES LCURLY program RCURLY .)
    RCURLY          reduce using rule 18 (for -> FOR LPTHESES statement COLON condition COLON expression RPTHESES LCURLY program RCURLY .)


state 98

    (16) elifblock -> ELIF LPTHESES condition RPTHESES . LCURLY program RCURLY ifcont

    LCURLY          shift and go to state 100


state 99

    (15) elseblock -> ELSE LCURLY program RCURLY .

    $end            reduce using rule 15 (elseblock -> ELSE LCURLY program RCURLY .)
    RCURLY          reduce using rule 15 (elseblock -> ELSE LCURLY program RCURLY .)
    ELIF            reduce using rule 15 (elseblock -> ELSE LCURLY program RCURLY .)
    ELSE            reduce using rule 15 (elseblock -> ELSE LCURLY program RCURLY .)


state 100

    (16) elifblock -> ELIF LPTHESES condition RPTHESES LCURLY . program RCURLY ifcont
    (1) program -> . statement
    (2) program -> . block
    (3) program -> . while
    (4) program -> . for
    (5) program -> .
    (6) statement -> . INT ID is_assing
    (7) statement -> . FLOAT ID is_assing
    (8) statement -> . STRING ID is_assing
    (9) statement -> . BOOLEAN ID is_assing
    (29) statement -> . PRINT LPTHESES expression RPTHESES
    (30) statement -> . ID ASSIGN expression
    (10) block -> . ifblock
    (17) while -> . WHILE LPTHESES condition RPTHESES LCURLY program RCURLY
    (18) for -> . FOR LPTHESES statement COLON condition COLON expression RPTHESES LCURLY program RCURLY
    (11) ifblock -> . IF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont

    RCURLY          reduce using rule 5 (program -> .)
    INT             shift and go to state 6
    FLOAT           shift and go to state 8
    STRING          shift and go to state 9
    BOOLEAN         shift and go to state 10
    PRINT           shift and go to state 11
    ID              shift and go to state 7
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    IF              shift and go to state 15

    program                        shift and go to state 101
    statement                      shift and go to state 2
    block                          shift and go to state 3
    while                          shift and go to state 4
    for                            shift and go to state 5
    ifblock                        shift and go to state 12

state 101

    (16) elifblock -> ELIF LPTHESES condition RPTHESES LCURLY program . RCURLY ifcont

    RCURLY          shift and go to state 102


state 102

    (16) elifblock -> ELIF LPTHESES condition RPTHESES LCURLY program RCURLY . ifcont
    (12) ifcont -> . elifblock ifcont
    (13) ifcont -> . elseblock
    (14) ifcont -> .
    (16) elifblock -> . ELIF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont
    (15) elseblock -> . ELSE LCURLY program RCURLY

  ! shift/reduce conflict for ELIF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    $end            reduce using rule 14 (ifcont -> .)
    RCURLY          reduce using rule 14 (ifcont -> .)
    ELIF            shift and go to state 88
    ELSE            shift and go to state 89

  ! ELIF            [ reduce using rule 14 (ifcont -> .) ]
  ! ELSE            [ reduce using rule 14 (ifcont -> .) ]

    ifcont                         shift and go to state 103
    elifblock                      shift and go to state 86
    elseblock                      shift and go to state 87

state 103

    (16) elifblock -> ELIF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont .

    ELIF            reduce using rule 16 (elifblock -> ELIF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont .)
    ELSE            reduce using rule 16 (elifblock -> ELIF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont .)
    $end            reduce using rule 16 (elifblock -> ELIF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont .)
    RCURLY          reduce using rule 16 (elifblock -> ELIF LPTHESES condition RPTHESES LCURLY program RCURLY ifcont .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 67 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 67 resolved as shift
WARNING: shift/reduce conflict for MULT in state 67 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 67 resolved as shift
WARNING: shift/reduce conflict for EXP in state 67 resolved as shift
WARNING: shift/reduce conflict for ELIF in state 86 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 86 resolved as shift
WARNING: shift/reduce conflict for ELIF in state 102 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 102 resolved as shift
